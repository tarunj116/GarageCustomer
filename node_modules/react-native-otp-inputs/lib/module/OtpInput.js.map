{"version":3,"sources":["OtpInput.tsx"],"names":["React","useState","useEffect","forwardRef","Platform","TextInput","View","majorVersionIOS","parseInt","Version","isOTPSupported","OS","OtpInput","focusStyles","handleKeyPress","handleTextChange","inputContainerStyles","inputStyles","inputValue","placeholder","selectTextOnFocus","secureTextEntry","rest","ref","focused","setFocused","current","setNativeProps","value","text","select","ios","android","memo"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,UAArC,QAAkE,OAAlE;AACA,SACEC,QADF,EAGEC,SAHF,EAKEC,IALF,QAUO,cAVP;AAyBA,MAAMC,eAAuB,GAAGC,QAAQ,CAAE,GAAEJ,QAAQ,CAACK,OAAQ,EAArB,EAAwB,EAAxB,CAAxC;AACA,MAAMC,cAAuB,GAAGN,QAAQ,CAACO,EAAT,KAAgB,KAAhB,IAAyBJ,eAAe,IAAI,EAA5E;AAEA,MAAMK,QAAQ,gBAAGT,UAAU,CACzB,CACE;AACEU,EAAAA,WADF;AAEEC,EAAAA,cAFF;AAGEC,EAAAA,gBAHF;AAIEC,EAAAA,oBAJF;AAKEC,EAAAA,WALF;AAMEC,EAAAA,UANF;AAOEC,EAAAA,WAPF;AAQEC,EAAAA,iBARF;AASEC,EAAAA,eATF;AAUE,KAAGC;AAVL,CADF,EAaEC,GAbF,KAcK;AACH,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBxB,QAAQ,CAAC,KAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AAAA;;AACbqB,IAAAA,GAAD,aAACA,GAAD,mCAACA,GAAD,CAA+BG,OAA/B,sDAAwCC,cAAxC,CAAuD;AACrDC,MAAAA,KAAK,EAAEV,UAD8C;AAErDW,MAAAA,IAAI,EAAEX;AAF+C,KAAvD;AAID,GALQ,EAKN,CAACK,GAAD,EAAML,UAAN,CALM,CAAT;AAOA,sBACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAE,CAACF,oBAAD,EAAuBQ,OAAO,IAAIX,WAAlC;AAAb,kBACE,oBAAC,SAAD;AACE,IAAA,MAAM,EAAE,MAAMY,UAAU,CAAC,KAAD,CAD1B;AAEE,IAAA,YAAY,EAAEV,gBAFhB;AAGE,IAAA,OAAO,EAAE,MAAMU,UAAU,CAAC,IAAD,CAH3B;AAIE,IAAA,UAAU,EAAEX,cAJd;AAKE,IAAA,WAAW,EAAEK,WALf;AAME,IAAA,GAAG,EAAEI,GANP,CAOE;AAPF;AAQE,IAAA,iBAAiB,EAAEnB,QAAQ,CAAC0B,MAAT,CAAgB;AACjCC,MAAAA,GAAG,EAAEX,iBAD4B;AAEjCY,MAAAA,OAAO,EAAE;AAFwB,KAAhB,CARrB;AAYE,IAAA,KAAK,EAAEf,WAZT;AAaE,IAAA,eAAe,EAAEP,cAAc,GAAG,aAAH,GAAmB,MAbpD;AAcE,IAAA,qBAAqB,EAAC,aAdxB;AAeE,IAAA,eAAe,EAAEW;AAfnB,KAgBMC,IAhBN,EADF,CADF;AAsBD,CA/CwB,CAA3B;AAkDA,4BAAetB,KAAK,CAACiC,IAAN,CAAWrB,QAAX,CAAf","sourcesContent":["import React, { useState, useEffect, forwardRef, RefObject } from 'react';\nimport {\n  Platform,\n  StyleProp,\n  TextInput,\n  TextStyle,\n  View,\n  ViewStyle,\n  TextInputProps,\n  NativeSyntheticEvent,\n  TextInputKeyPressEventData,\n} from 'react-native';\n\ntype Props = TextInputProps & {\n  inputContainerStyles?: StyleProp<ViewStyle>;\n  firstInput: boolean;\n  focusStyles?: StyleProp<ViewStyle>;\n  inputStyles?: StyleProp<TextStyle>;\n  numberOfInputs: number;\n  handleTextChange: (text: string) => void;\n  inputValue: string;\n  handleKeyPress: (\n    keyPressEvent: NativeSyntheticEvent<TextInputKeyPressEventData>,\n  ) => void;\n};\n\nconst majorVersionIOS: number = parseInt(`${Platform.Version}`, 10);\nconst isOTPSupported: boolean = Platform.OS === 'ios' && majorVersionIOS >= 12;\n\nconst OtpInput = forwardRef<TextInput, Props>(\n  (\n    {\n      focusStyles,\n      handleKeyPress,\n      handleTextChange,\n      inputContainerStyles,\n      inputStyles,\n      inputValue,\n      placeholder,\n      selectTextOnFocus,\n      secureTextEntry,\n      ...rest\n    },\n    ref,\n  ) => {\n    const [focused, setFocused] = useState(false);\n\n    useEffect(() => {\n      (ref as RefObject<TextInput>)?.current?.setNativeProps({\n        value: inputValue,\n        text: inputValue,\n      });\n    }, [ref, inputValue]);\n\n    return (\n      <View style={[inputContainerStyles, focused && focusStyles]}>\n        <TextInput\n          onBlur={() => setFocused(false)}\n          onChangeText={handleTextChange}\n          onFocus={() => setFocused(true)}\n          onKeyPress={handleKeyPress}\n          placeholder={placeholder}\n          ref={ref}\n          // https://github.com/facebook/react-native/issues/18339\n          selectTextOnFocus={Platform.select({\n            ios: selectTextOnFocus,\n            android: true,\n          })}\n          style={inputStyles}\n          textContentType={isOTPSupported ? 'oneTimeCode' : 'none'}\n          underlineColorAndroid=\"transparent\"\n          secureTextEntry={secureTextEntry}\n          {...rest}\n        />\n      </View>\n    );\n  },\n);\n\nexport default React.memo(OtpInput);\n"]}