/*!
 * MIT License
 * 
 * Copyright (c) 2021 Yoav Niran
 * 
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 * 
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 * 
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 * 
 */
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t(require("react"),require("react-dom")):"function"==typeof define&&define.amd?define(["react","react-dom"],t):"object"==typeof exports?exports.rpldy=t(require("react"),require("react-dom")):e.rpldy=t(e.react,e["react-dom"])}(window,(function(e,t){return function(e){function t(t){for(var r,a,u=t[0],i=t[1],d=t[2],l=0,f=[];l<u.length;l++)a=u[l],Object.prototype.hasOwnProperty.call(o,a)&&o[a]&&f.push(o[a][0]),o[a]=0;for(r in i)Object.prototype.hasOwnProperty.call(i,r)&&(e[r]=i[r]);for(c&&c(t);f.length;)f.shift()();return s.push.apply(s,d||[]),n()}function n(){for(var e,t=0;t<s.length;t++){for(var n=s[t],r=!0,u=1;u<n.length;u++){var i=n[u];0!==o[i]&&(r=!1)}r&&(s.splice(t--,1),e=a(a.s=n[0]))}return e}var r={},o={main:0},s=[];function a(t){if(r[t])return r[t].exports;var n=r[t]={i:t,l:!1,exports:{}};return e[t].call(n.exports,n,n.exports,a),n.l=!0,n.exports}a.m=e,a.c=r,a.d=function(e,t,n){a.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:n})},a.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},a.t=function(e,t){if(1&t&&(e=a(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var n=Object.create(null);if(a.r(n),Object.defineProperty(n,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)a.d(n,r,function(t){return e[t]}.bind(null,r));return n},a.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return a.d(t,"a",t),t},a.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},a.p="";var u=window.webpackJsonprpldy=window.webpackJsonprpldy||[],i=u.push.bind(u);u.push=t,u=u.slice();for(var d=0;d<u.length;d++)t(u[d]);var c=i;return s.push(["MIuT","polyfills"]),n()}({DVTP:function(e,t){e.exports=function(){return!0}},Lrr1:function(e,t,n){"use strict";(function(e){n.d(t,"c",(function(){return s})),n.d(t,"b",(function(){return a})),n.d(t,"d",(function(){return u})),n.d(t,"a",(function(){return i}));var r=n("mHo/");const o=Symbol.for("_rpldy-version_"),s=()=>"0.13.2",a=()=>(Object(r.hasWindow)()?window:e)[o],u=()=>{(Object(r.hasWindow)()?window:e)[o]=s()},i=()=>{const e=a();return!!e&&e!==s()}}).call(this,n("8oxB"))},MIuT:function(e,t,n){"use strict";n.r(t),n.d(t,"chunkedSender",(function(){return s})),n.d(t,"lifeEvents",(function(){return a})),n.d(t,"mockSender",(function(){return u})),n.d(t,"retry",(function(){return d})),n.d(t,"safeStorage",(function(){return c})),n.d(t,"sender",(function(){return r})),n.d(t,"shared",(function(){return T})),n.d(t,"simpleState",(function(){return o})),n.d(t,"tusSender",(function(){return l})),n.d(t,"uploader",(function(){return i})),n.d(t,"chunkedUploady",(function(){return g})),n.d(t,"retryHooks",(function(){return h})),n.d(t,"sharedUi",(function(){return f})),n.d(t,"tusUploady",(function(){return b})),n.d(t,"uploadButton",(function(){return m})),n.d(t,"uploadDropZone",(function(){return S})),n.d(t,"uploadPaste",(function(){return E})),n.d(t,"uploadPreview",(function(){return v})),n.d(t,"uploadUrlInput",(function(){return O})),n.d(t,"uploady",(function(){return p}));var r={};n.r(r),n.d(r,"default",(function(){return U})),n.d(r,"send",(function(){return w})),n.d(r,"getXhrSend",(function(){return D})),n.d(r,"XHR_SENDER_TYPE",(function(){return y})),n.d(r,"MissingUrlError",(function(){return I}));var o={};n.r(o),n.d(o,"default",(function(){return K})),n.d(o,"createState",(function(){return K})),n.d(o,"unwrap",(function(){return V})),n.d(o,"isProxy",(function(){return M})),n.d(o,"isProxiable",(function(){return q}));var s={};n.r(s),n.d(s,"default",(function(){return ce})),n.d(s,"CHUNK_EVENTS",(function(){return X})),n.d(s,"CHUNKING_SUPPORT",(function(){return N})),n.d(s,"CHUNKED_SENDER_TYPE",(function(){return Q})),n.d(s,"CHUNKED_DEFAULT_OPTIONS",(function(){return k})),n.d(s,"getChunkedEnhancer",(function(){return de})),n.d(s,"createChunkedSender",(function(){return ie})),n.d(s,"getChunkDataFromFile",(function(){return F}));var a={};n.r(a),n.d(a,"default",(function(){return Re})),n.d(a,"addLife",(function(){return Re})),n.d(a,"isLE",(function(){return Se})),n.d(a,"createLifePack",(function(){return Ce}));var u={};n.r(u),n.d(u,"default",(function(){return je})),n.d(u,"MOCK_SENDER_TYPE",(function(){return Pe})),n.d(u,"createMockSender",(function(){return Ue})),n.d(u,"getMockSenderEnhancer",(function(){return ke}));var i={};n.r(i),n.d(i,"default",(function(){return yt})),n.d(i,"UPLOADER_EVENTS",(function(){return Ne})),n.d(i,"DEFAULT_OPTIONS",(function(){return ft})),n.d(i,"composeEnhancers",(function(){return Tt})),n.d(i,"createUploader",(function(){return Ot})),n.d(i,"send",(function(){return w})),n.d(i,"getXhrSend",(function(){return D})),n.d(i,"XHR_SENDER_TYPE",(function(){return y})),n.d(i,"MissingUrlError",(function(){return I}));var d={};n.r(d),n.d(d,"default",(function(){return Ct})),n.d(d,"retryEnhancer",(function(){return Ct})),n.d(d,"RETRY_EVENT",(function(){return At})),n.d(d,"RETRY_EXT",(function(){return It}));var c={};n.r(c),n.d(c,"safeLocalStorage",(function(){return Dt})),n.d(c,"safeSessionStorage",(function(){return wt}));var l={};n.r(l),n.d(l,"CHUNKING_SUPPORT",(function(){return N})),n.d(l,"TUS_SENDER_TYPE",(function(){return xt})),n.d(l,"getTusEnhancer",(function(){return ln})),n.d(l,"clearResumables",(function(){return Ft})),n.d(l,"TUS_EXT",(function(){return Bt})),n.d(l,"default",(function(){return fn}));var f={};n.r(f),n.d(f,"useBatchAddListener",(function(){return Cn})),n.d(f,"useBatchStartListener",(function(){return Pn})),n.d(f,"useBatchProgressListener",(function(){return kn})),n.d(f,"useBatchFinishListener",(function(){return Dn})),n.d(f,"useBatchCancelledListener",(function(){return wn})),n.d(f,"useBatchAbortListener",(function(){return Un})),n.d(f,"useItemStartListener",(function(){return jn})),n.d(f,"useItemFinishListener",(function(){return Nn})),n.d(f,"useItemProgressListener",(function(){return Mn})),n.d(f,"useItemCancelListener",(function(){return Fn})),n.d(f,"useItemErrorListener",(function(){return Bn})),n.d(f,"useItemAbortListener",(function(){return xn})),n.d(f,"useItemFinalizeListener",(function(){return Hn})),n.d(f,"useRequestPreSend",(function(){return qn})),n.d(f,"useAllAbortListener",(function(){return $n})),n.d(f,"generateUploaderEventHook",(function(){return An})),n.d(f,"generateUploaderEventHookWithState",(function(){return In})),n.d(f,"logWarning",(function(){return Ln})),n.d(f,"markAsUploadOptionsComponent",(function(){return _n})),n.d(f,"getIsUploadOptionsComponent",(function(){return Rn})),n.d(f,"assertContext",(function(){return On})),n.d(f,"useUploadOptions",(function(){return zn})),n.d(f,"useAbortItem",(function(){return Gn})),n.d(f,"useAbortBatch",(function(){return Wn})),n.d(f,"useAbortAll",(function(){return Vn})),n.d(f,"NoDomUploady",(function(){return Kn})),n.d(f,"UploadyContext",(function(){return vn})),n.d(f,"createContextApi",(function(){return En})),n.d(f,"withRequestPreSendUpdate",(function(){return Xn})),n.d(f,"useUploadyContext",(function(){return Tn})),n.d(f,"useUploady",(function(){return Tn})),n.d(f,"getUploadyVersion",(function(){return Sn.c}));var p={};n.r(p),n.d(p,"default",(function(){return rr})),n.d(p,"useFileInput",(function(){return nr})),n.d(p,"Uploady",(function(){return er})),n.d(p,"UPLOADER_EVENTS",(function(){return Ne})),n.d(p,"DEFAULT_OPTIONS",(function(){return ft})),n.d(p,"composeEnhancers",(function(){return Tt})),n.d(p,"createUploader",(function(){return Ot})),n.d(p,"send",(function(){return w})),n.d(p,"getXhrSend",(function(){return D})),n.d(p,"XHR_SENDER_TYPE",(function(){return y})),n.d(p,"MissingUrlError",(function(){return I})),n.d(p,"useBatchAddListener",(function(){return Cn})),n.d(p,"useBatchStartListener",(function(){return Pn})),n.d(p,"useBatchProgressListener",(function(){return kn})),n.d(p,"useBatchFinishListener",(function(){return Dn})),n.d(p,"useBatchCancelledListener",(function(){return wn})),n.d(p,"useBatchAbortListener",(function(){return Un})),n.d(p,"useItemStartListener",(function(){return jn})),n.d(p,"useItemFinishListener",(function(){return Nn})),n.d(p,"useItemProgressListener",(function(){return Mn})),n.d(p,"useItemCancelListener",(function(){return Fn})),n.d(p,"useItemErrorListener",(function(){return Bn})),n.d(p,"useItemAbortListener",(function(){return xn})),n.d(p,"useItemFinalizeListener",(function(){return Hn})),n.d(p,"useRequestPreSend",(function(){return qn})),n.d(p,"useAllAbortListener",(function(){return $n})),n.d(p,"generateUploaderEventHook",(function(){return An})),n.d(p,"generateUploaderEventHookWithState",(function(){return In})),n.d(p,"logWarning",(function(){return Ln})),n.d(p,"markAsUploadOptionsComponent",(function(){return _n})),n.d(p,"getIsUploadOptionsComponent",(function(){return Rn})),n.d(p,"assertContext",(function(){return On})),n.d(p,"useUploadOptions",(function(){return zn})),n.d(p,"useAbortItem",(function(){return Gn})),n.d(p,"useAbortBatch",(function(){return Wn})),n.d(p,"useAbortAll",(function(){return Vn})),n.d(p,"NoDomUploady",(function(){return Kn})),n.d(p,"UploadyContext",(function(){return vn})),n.d(p,"createContextApi",(function(){return En})),n.d(p,"withRequestPreSendUpdate",(function(){return Xn})),n.d(p,"useUploadyContext",(function(){return Tn})),n.d(p,"useUploady",(function(){return Tn})),n.d(p,"getUploadyVersion",(function(){return Sn.c})),n.d(p,"FILE_STATES",(function(){return T.FILE_STATES})),n.d(p,"BATCH_STATES",(function(){return T.BATCH_STATES}));var g={};n.r(g),n.d(g,"default",(function(){return ur})),n.d(g,"ChunkedUploady",(function(){return or})),n.d(g,"CHUNK_EVENTS",(function(){return X})),n.d(g,"useFileInput",(function(){return nr})),n.d(g,"Uploady",(function(){return er})),n.d(g,"UPLOADER_EVENTS",(function(){return Ne})),n.d(g,"DEFAULT_OPTIONS",(function(){return ft})),n.d(g,"composeEnhancers",(function(){return Tt})),n.d(g,"createUploader",(function(){return Ot})),n.d(g,"send",(function(){return w})),n.d(g,"getXhrSend",(function(){return D})),n.d(g,"XHR_SENDER_TYPE",(function(){return y})),n.d(g,"MissingUrlError",(function(){return I})),n.d(g,"useBatchAddListener",(function(){return Cn})),n.d(g,"useBatchStartListener",(function(){return Pn})),n.d(g,"useBatchProgressListener",(function(){return kn})),n.d(g,"useBatchFinishListener",(function(){return Dn})),n.d(g,"useBatchCancelledListener",(function(){return wn})),n.d(g,"useBatchAbortListener",(function(){return Un})),n.d(g,"useItemStartListener",(function(){return jn})),n.d(g,"useItemFinishListener",(function(){return Nn})),n.d(g,"useItemProgressListener",(function(){return Mn})),n.d(g,"useItemCancelListener",(function(){return Fn})),n.d(g,"useItemErrorListener",(function(){return Bn})),n.d(g,"useItemAbortListener",(function(){return xn})),n.d(g,"useItemFinalizeListener",(function(){return Hn})),n.d(g,"useRequestPreSend",(function(){return qn})),n.d(g,"useAllAbortListener",(function(){return $n})),n.d(g,"generateUploaderEventHook",(function(){return An})),n.d(g,"generateUploaderEventHookWithState",(function(){return In})),n.d(g,"logWarning",(function(){return Ln})),n.d(g,"markAsUploadOptionsComponent",(function(){return _n})),n.d(g,"getIsUploadOptionsComponent",(function(){return Rn})),n.d(g,"assertContext",(function(){return On})),n.d(g,"useUploadOptions",(function(){return zn})),n.d(g,"useAbortItem",(function(){return Gn})),n.d(g,"useAbortBatch",(function(){return Wn})),n.d(g,"useAbortAll",(function(){return Vn})),n.d(g,"NoDomUploady",(function(){return Kn})),n.d(g,"UploadyContext",(function(){return vn})),n.d(g,"createContextApi",(function(){return En})),n.d(g,"withRequestPreSendUpdate",(function(){return Xn})),n.d(g,"useUploadyContext",(function(){return Tn})),n.d(g,"useUploady",(function(){return Tn})),n.d(g,"getUploadyVersion",(function(){return Sn.c})),n.d(g,"FILE_STATES",(function(){return T.FILE_STATES})),n.d(g,"BATCH_STATES",(function(){return T.BATCH_STATES})),n.d(g,"useChunkStartListener",(function(){return sr})),n.d(g,"useChunkFinishListener",(function(){return ar}));var h={};n.r(h),n.d(h,"default",(function(){return fr})),n.d(h,"RETRY_EVENT",(function(){return At})),n.d(h,"retryEnhancer",(function(){return Ct})),n.d(h,"useRetry",(function(){return dr})),n.d(h,"useBatchRetry",(function(){return cr})),n.d(h,"useRetryListener",(function(){return lr}));var b={};n.r(b),n.d(b,"default",(function(){return hr})),n.d(b,"TusUploady",(function(){return pr})),n.d(b,"useClearResumableStore",(function(){return gr})),n.d(b,"useFileInput",(function(){return nr})),n.d(b,"Uploady",(function(){return er})),n.d(b,"UPLOADER_EVENTS",(function(){return Ne})),n.d(b,"DEFAULT_OPTIONS",(function(){return ft})),n.d(b,"composeEnhancers",(function(){return Tt})),n.d(b,"createUploader",(function(){return Ot})),n.d(b,"send",(function(){return w})),n.d(b,"getXhrSend",(function(){return D})),n.d(b,"XHR_SENDER_TYPE",(function(){return y})),n.d(b,"MissingUrlError",(function(){return I})),n.d(b,"useBatchAddListener",(function(){return Cn})),n.d(b,"useBatchStartListener",(function(){return Pn})),n.d(b,"useBatchProgressListener",(function(){return kn})),n.d(b,"useBatchFinishListener",(function(){return Dn})),n.d(b,"useBatchCancelledListener",(function(){return wn})),n.d(b,"useBatchAbortListener",(function(){return Un})),n.d(b,"useItemStartListener",(function(){return jn})),n.d(b,"useItemFinishListener",(function(){return Nn})),n.d(b,"useItemProgressListener",(function(){return Mn})),n.d(b,"useItemCancelListener",(function(){return Fn})),n.d(b,"useItemErrorListener",(function(){return Bn})),n.d(b,"useItemAbortListener",(function(){return xn})),n.d(b,"useItemFinalizeListener",(function(){return Hn})),n.d(b,"useRequestPreSend",(function(){return qn})),n.d(b,"useAllAbortListener",(function(){return $n})),n.d(b,"generateUploaderEventHook",(function(){return An})),n.d(b,"generateUploaderEventHookWithState",(function(){return In})),n.d(b,"logWarning",(function(){return Ln})),n.d(b,"markAsUploadOptionsComponent",(function(){return _n})),n.d(b,"getIsUploadOptionsComponent",(function(){return Rn})),n.d(b,"assertContext",(function(){return On})),n.d(b,"useUploadOptions",(function(){return zn})),n.d(b,"useAbortItem",(function(){return Gn})),n.d(b,"useAbortBatch",(function(){return Wn})),n.d(b,"useAbortAll",(function(){return Vn})),n.d(b,"NoDomUploady",(function(){return Kn})),n.d(b,"UploadyContext",(function(){return vn})),n.d(b,"createContextApi",(function(){return En})),n.d(b,"withRequestPreSendUpdate",(function(){return Xn})),n.d(b,"useUploadyContext",(function(){return Tn})),n.d(b,"useUploady",(function(){return Tn})),n.d(b,"getUploadyVersion",(function(){return Sn.c})),n.d(b,"FILE_STATES",(function(){return T.FILE_STATES})),n.d(b,"BATCH_STATES",(function(){return T.BATCH_STATES}));var m={};n.r(m),n.d(m,"default",(function(){return Sr})),n.d(m,"UploadButton",(function(){return mr})),n.d(m,"asUploadButton",(function(){return br}));var S={};n.r(S),n.d(S,"default",(function(){return Tr})),n.d(S,"UploadDropZone",(function(){return Or}));var E={};n.r(E),n.d(E,"withPasteUpload",(function(){return Ir})),n.d(E,"default",(function(){return Rr})),n.d(E,"usePasteUpload",(function(){return _r}));var v={};n.r(v),n.d(v,"PREVIEW_TYPES",(function(){return Cr})),n.d(v,"default",(function(){return Br})),n.d(v,"UploadPreview",(function(){return Fr}));var O={};n.r(O),n.d(O,"default",(function(){return Mr})),n.d(O,"UploadUrlInput",(function(){return Hr}));var T=n("mHo/");const y="rpldy-sender";class I extends Error{constructor(e){super(e+" didn't receive upload URL"),this.name="MissingUrlError"}}const A=(e,t,...n)=>{e.set?e.set(t,...n):(e.delete&&e.delete(t),e.append(t,...n))};var L=(e,t)=>{const n=new FormData;return t.params&&Object.entries(t.params).forEach(([e,t])=>A(n,e,t)),((e,t,n)=>{const r=1===t.length;t.forEach((t,o)=>{const s=r?n.paramName:Object(T.isFunction)(n.formatGroupParamName)?n.formatGroupParamName(o,n.paramName):`${n.paramName}[${o}]`;t.file?A(e,s,t.file,t.file.name):t.url&&A(e,s,t.url)})})(n,e,t),n};const _=[200,201,202,203,204],R=(e,t,n,r,o)=>{let s;const a=null!=o&&o.getRequestData?o.getRequestData(e,n):((e,t)=>{let n;if(t.sendWithFormData)T.logger.debugLog(`uploady.sender: sending ${e.length} item(s) as form data`),n=L(e,t);else{if(e.length>1)throw new Error("XHR Sender - Request without form data can only contain 1 item. received "+e.length);const t=e[0];T.logger.debugLog(`uploady.sender: sending item ${t.id} as request body`),n=t.file||t.url}return n})(e,n),u=(o=t,u=a,i)=>{i=Object(T.merge)({...Object(T.pick)(n,["method","headers","withCredentials"]),preSend:t=>{t.upload.onprogress=t=>{t.lengthComputable&&r&&r(t,e.slice())}}},i);const d=Object(T.request)(o,u,i);return s=d.xhr,d},i=null!=o&&o.preRequestHandler?o.preRequestHandler(u,e,t,n,r,o):u();return{url:t,count:e.length,pXhr:i,getXhr:()=>s,aborted:!1}},C=(e,t,n)=>{let r=e;const o=null==t?void 0:t["content-type"];if(n.forceJsonResponse||null!=o&&o.includes("json"))try{r=JSON.parse(e)}catch{}return r},P=(e,t)=>e.pXhr.then(e=>{var n,r;let o,s,a;T.logger.debugLog("uploady.sender: received upload response ",e),o=~_.indexOf(e.status)?T.FILE_STATES.FINISHED:T.FILE_STATES.ERROR,a=e.status;const u=Object(T.parseResponseHeaders)(e);return s={data:null!==(n=null===(r=t.formatServerResponse)||void 0===r?void 0:r.call(t,e.response,a,u))&&void 0!==n?n:C(e.response,u,t),headers:u},{status:a,state:o,response:s}}).catch(t=>{let n,r;return e.aborted?(n=T.FILE_STATES.ABORTED,r="aborted"):(T.logger.debugLog("uploady.sender: upload failed: ",t),n=T.FILE_STATES.ERROR,r=t),{error:!0,state:n,response:r,status:0}});var D=e=>(t,n,r,o)=>{if(!n)throw new I(y);T.logger.debugLog("uploady.sender: sending file: ",{items:t,url:n,options:r});const s=R(t,n,r,o,e);return{request:P(s,r),abort:()=>(e=>{let t=!1;const{aborted:n,getXhr:r}=e,o=r();return!n&&o&&o.readyState&&4!==o.readyState&&(T.logger.debugLog(`uploady.sender: cancelling request with ${e.count} items to: ${e.url}`),o.abort(),e.aborted=!0,t=!0),t})(s),senderType:y}};const w=D();var U=w;const k=Object(T.devFreeze)({chunked:!0,chunkSize:5242880,retries:0,parallel:1});let j=null;const N=(j=null,Object(T.hasWindow)()&&"Blob"in window&&(j=Blob.prototype.slice||Blob.prototype.webkitSlice||Blob.prototype.mozSlice),!!j),F=(e,t,n)=>{var r;const o=null===(r=j)||void 0===r?void 0:r.call(e,t,n,e.type);return o&&(o.name=e.name,o.lastModified=e.lastModified),o};class B extends Error{constructor(e){super(e),this.name="ChunkedSendError"}}const x=Symbol.for("__rpldy-sstt-proxy__"),H=Symbol.for("__rpldy-sstt-state__"),M=e=>!Object(T.isProduction)()&&!!e&&!!~Object.getOwnPropertySymbols(e).indexOf(x),q=e=>Array.isArray(e)||Object(T.isPlainObject)(e)&&!(e=>Object(T.hasWindow)()&&e instanceof File||e.name&&e.size&&e.uri)(e),$=Object(T.getMerge)({withSymbols:!0,predicate:e=>e!==x&&e!==H}),z=e=>!!Object(T.isProduction)()||e[H].isUpdateable,G=(e,t)=>{Object(T.isProduction)()||(e[H].isUpdateable=t)},W=(e,t)=>{let n;return q(e)&&(M(e)||(e[x]=!0,n=new Proxy(e,t)),Object.keys(e).forEach(n=>{e[n]=W(e[n],t)})),n||e},V=e=>M(e)?Object(T.clone)(e,$):e;var K=e=>{const t={set:(e,r,o)=>(z(n)&&(e[r]=W(o,t)),!0),get:(e,t)=>t===x?V(e):e[t],defineProperty:()=>{throw new Error("Simple State doesnt support defining property")},setPrototypeOf:()=>{throw new Error("Simple State doesnt support setting prototype")},deleteProperty:(e,t)=>(z(n)&&delete e[t],!0)};Object(T.isProduction)()||M(e)||Object.defineProperty(e,H,{value:{isUpdateable:!1},configurable:!0});const n=Object(T.isProduction)()?e:W(e,t);return{state:n,update:e=>{if(!Object(T.isProduction)()&&z(n))throw new Error("Can't call update on State already being updated!");try{G(n,!0),e(n)}finally{G(n,!1)}return n},unwrap:e=>e?V(e):M(n)?V(n):n}};const X=Object(T.devFreeze)({CHUNK_START:"CHUNK_START",CHUNK_FINISH:"CHUNK_FINISH"}),Q="rpldy-chunked-sender";var Y=(e,t,n,r,o)=>(e.requests[n]={id:n,abort:r.abort},r.request.then(r=>{T.logger.debugLog(`chunkedSender: request finished for chunk: ${n} - `,r),delete e.requests[n];const s=e.chunks.findIndex(e=>e.id===n);if(~s){if(r.state===T.FILE_STATES.FINISHED){const n=e.chunks.splice(s,1);o(X.CHUNK_FINISH,{chunk:Object(T.pick)(n[0],["id","start","end","index","attempt"]),item:V(t),uploadData:r})}else r.state!==T.FILE_STATES.ABORTED&&(e.chunks[s].attempt+=1);e.responses.push(r.response)}}));const J=(e,t,n)=>t&&`bytes ${e.start}-${e.start+t.size-1}/${n.file.size}`,Z=Object(T.getMerge)({undefinedOverwrites:!0}),ee=(e,t,n,r,o)=>{const s={...V(t.sendOptions),headers:{...t.sendOptions.headers,"Content-Range":J(e,e.data,n)}},a=Object(T.createBatchItem)(e.data,e.id),u=t=>{r(t,[e])},i=t.chunks.indexOf(e);return Object(T.triggerUpdater)(o,X.CHUNK_START,{item:V(n),chunk:Object(T.pick)(e,["id","start","end","index","attempt"]),chunkItem:a,sendOptions:s,url:t.url,chunkIndex:i,remainingCount:t.chunks.length,totalCount:t.chunkCount,onProgress:r}).then(e=>{const r=!1===e;return r&&T.logger.debugLog(`chunkedSender.sendChunk: received false from CHUNK_START handler - skipping chunk ${i}, item ${n.id}`),r?{request:Promise.resolve({state:T.FILE_STATES.FINISHED,response:"skipping chunk as instructed by CHUNK_START handler",status:200}),abort:()=>!0,senderType:"chunk-skipped-sender"}:U([a],(null==e?void 0:e.url)||t.url,Z({},s,e&&e.sendOptions),u)})};const te=(e,t)=>{e(t instanceof B?{state:T.FILE_STATES.ERROR,response:"At least one chunk failed"}:{state:T.FILE_STATES.ERROR,response:t.message})},ne=(e,t,n,r)=>{e.finished=!0,n({state:r,response:{results:e.responses}})},re=(e,t,n,r,o,s)=>new Promise((a,u)=>{try{const u=((e,t,n,r,o)=>{if(e.data||(e.data=F(n.file,e.start,e.end)),!e.data)throw new B("chunk failure - failed to slice");T.logger.debugLog(`chunkedSender.sendChunk: about to send chunk ${e.id} [${e.start}-${e.end}] to: ${t.url||""}`);const s=ee(e,t,n,r,o);return{request:s.then(({request:e})=>e),abort:()=>(s.then(({abort:e})=>e()),!0),senderType:"chunk-passthrough-sender"}})(o,e,t,n,s);Y(e,t,o.id,u,s).then(()=>{a(),((e,t,n)=>{const r=!e.chunks.length;return e.aborted?(T.logger.debugLog("chunkedSender: chunked upload aborted for item: "+t.id),ne(e,0,n,T.FILE_STATES.ABORTED)):r&&!e.error&&(T.logger.debugLog("chunkedSender: chunked upload finished for item: "+t.id,e.responses),ne(e,0,n,T.FILE_STATES.FINISHED)),r||e.error})(e,t,r)||oe(e,t,n,r,s)})}catch(e){u(e)}}),oe=(e,t,n,r,o)=>{if(!e.finished&&!e.aborted){const s=Object.keys(e.requests).length;if(!s||e.parallel&&e.parallel>s){let s;try{s=(e=>{const t=[],n=Object.keys(e.requests),r=e.parallel||1;for(let o=0;o<e.chunks.length&&n.length<r&&t.length<r;o++){const r=e.chunks[o];if(!n.includes(r.id)){if(r.attempt&&!(r.attempt<e.retries))throw new B("chunk failure");t.push(r)}}return t})(e)}catch(e){te(r,e)}s&&s.forEach(s=>{re(e,t,n,r,s,o).catch(t=>{e.error=!0,te(r,t)})})}}};var se=oe;const ae=(e,t,n,r)=>{const o=Object(T.throttle)((r,o)=>{const{id:s}=o[0];e.uploaded[s]=r.loaded;const a=Object.keys(e.uploaded).reduce((t,n)=>t+e.uploaded[n],e.chunks[0].start);n({loaded:a,total:t.file.size},[t])},100,!0);return{sendPromise:new Promise(n=>{se(e,t,o,n,r)}),abort:()=>((e,t)=>(T.logger.debugLog("chunkedSender: aborting chunked upload for item: "+t.id),e.finished||e.aborted||(Object.keys(e.requests).forEach(t=>{T.logger.debugLog("chunkedSender: aborting chunk: "+t),e.requests[t].abort()}),e.aborted=!0),e.aborted))(e,t)}};var ue=(e,t,n,r,o,s)=>{const a=((e,t,n=0)=>{const{chunkSize:r}=t,o=n?e.file.size-n:e.file.size;if(o<=0)throw new B(`start byte ${n} is invalid. File size: ${e.file.size}`);const s=o<=r?1:Math.ceil(o/r);return new Array(s).fill(null).map((t,o)=>{const s=r*o+(n||0);return{id:`${e.id}_chunk-${o}`,start:s,end:Math.min(s+r,e.file.size),data:null,attempt:0,uploaded:0,index:o}})})(e,t,r.startByte);T.logger.debugLog(`chunkedSender: created ${a.length} chunks for: ${e.file.name}`);const u={finished:!1,aborted:!1,error:!1,uploaded:{},requests:{},responses:[],chunkCount:a.length,chunks:a,url:n,sendOptions:r,...t},{sendPromise:i,abort:d}=ae(u,e,o,s);return{request:i,abort:d,senderType:Q}},ie=(e,t)=>{const n=(e=>Object(T.merge)({},k,e))(e);return{send:(e,r,o,s)=>{let a;return!n.chunked||e.length>1||e[0].url||!e[0].file.size?(a=U(e,r,o,s),T.logger.debugLog("chunkedSender: sending items as normal, un-chunked requests")):(T.logger.debugLog("chunkedSender: sending file as a chunked request"),a=ue(e[0],n,r,o,s,t)),a}}},de=e=>(t,n)=>{const r=ie(e,n);return t.update({send:r.send}),t},ce=de,le=n("JlUD"),fe=n.n(le);var pe=Object(T.devFreeze)({allowRegisterNonExistent:!0,canAddEvents:!0,canRemoveEvents:!0,collectStats:!1});const ge=Symbol.for("__le__"),he=Symbol.for("__le__pack__"),be=e=>e?e[ge]:null,me=e=>{const t=be(e);if(!t)throw new Error("Didnt find LE internal object. Something very bad happened!");return t},Se=e=>!!be(e),Ee=(e,t,n,r=!1)=>{((e,t)=>{if(!Object(T.isFunction)(e))throw new Error(`'${t}' is not a valid function`)})(n,"cb");const o=me(e);if(!o.options.allowRegisterNonExistent&&!~o.events.indexOf(t))throw new Error(`Cannot register for event ${t.toString()} that wasn't already defined (allowRegisterNonExistent = false)`);const s=o.registry[t]||[];return s.find(e=>e.cb===n)||(s.push({name:t,cb:n,once:r}),o.registry[t]=s),()=>Le.call(e,t,n)},ve=(e,t)=>{const n=me(e).registry;return t?n[t]?n[t].slice():[]:Object.values(n).flat()},Oe={on:function(e,t){return Ee(this,e,t)},once:function(e,t){return Ee(this,e,t,!0)},off:Le,getEvents:function(){return me(this).events.slice()}},Te={trigger:function(e,...t){const n=ve(this,e);let r;if(n.length){var o;let s;1===t.length&&!0===(null===(o=t[0])||void 0===o?void 0:o[he])&&(s=t[0].resolve()),r=n.map(n=>{let r;return n.once&&Ae(this,e,n.cb),r=s?n.cb(...s):t.length?1===t.length?n.cb(t[0]):2===t.length?n.cb(t[0],t[1]):3===t.length?n.cb(t[0],t[1],t[2]):n.cb(...t):n.cb(),r}).filter(e=>!(void 0===e)).map(e=>fe()(e)?e:Promise.resolve(e))}return r&&(r.length?r:void 0)},addEvent:function(e){const t=me(this);if(!t.options.canAddEvents)throw new Error("Cannot add new events (canAddEvents = false)");if(~t.events.indexOf(e))throw new Error(`Event '${e}' already defined`);t.events.push(e)},removeEvent:function(e){const t=me(this);if(!t.options.canRemoveEvents)throw new Error("Cannot remove events (canRemoveEvents = false)");{const n=t.events.indexOf(e);t.events.splice(n,1)}},hasEvent:function(e){return!!~me(this).events.indexOf(e)},hasEventRegistrations:function(e){return!!ve(this,e).length},assign:function(e){const t=me(this);return _e(e,t.options,t.events,t.registry,t.stats),ye(e)}},ye=e=>Object.keys(Te).reduce((t,n)=>(t[n]=Te[n].bind(e),t),{target:e,...Te}),Ie=(e,t,n=!1)=>{const r=me(e).registry;!r[t]||!n&&r[t].length||delete r[t]},Ae=(e,t,n)=>{const r=me(e).registry;r[t]&&(n?(r[t]=r[t].filter(e=>e.cb!==n),Ie(e,t)):Ie(e,t,!0))};function Le(e,t){Ae(this,e,t)}const _e=(e,t,n=[],r={},o={})=>{Object.defineProperties(e,{[ge]:{value:Object.seal({registry:r,events:n,options:t,stats:o})},...Object.entries(Oe).reduce((e,[t,n])=>(e[t]={value:n},e),{})})};var Re=(e,t=[],n)=>(e=e||{},n={...pe,...n},Se(e)||_e(e,n,t),ye(e));var Ce=e=>{const t={resolve:()=>[].concat(e())};return Object.defineProperty(t,he,{value:!0,configurable:!1}),t};const Pe="rpldy-mock-sender",De=Object(T.devFreeze)({delay:500,fileSize:1e6,progressIntervals:[10,25,50,75,99]}),we=(e,t,n)=>e.then(e=>{var r;T.logger.debugLog("uploady.mockSender: mock request finished successfully");const o={sendOptions:n,mock:!0,success:!0},s={"x-request-type":"react-uploady.mockSender"},a=t.responseStatus||200;return{status:a,state:T.FILE_STATES.FINISHED,response:{...e,headers:s,data:t.response||(null===(r=n.formatServerResponse)||void 0===r?void 0:r.call(n,JSON.stringify(o),a,s))||o}}}).catch(e=>(T.logger.debugLog("uploady.mockSender: mock request was aborted",e),{status:0,state:T.FILE_STATES.ABORTED,response:"abort"}));var Ue=e=>{let t={...De,...e};return{send:(e,n,r,o)=>{T.logger.debugLog("uploady.mockSender: about to make a mock request for items: ",e);const s=((e,t)=>{const n=performance.now(),r=[];let o=!1,s=!1,a=null,u=null,i=null;const d=()=>{u&&(u.forEach(e=>{clearTimeout(e)}),u=null)},c=new Promise((t,o)=>{i=o,setTimeout(()=>{s=!0,t({options:e,time:performance.now()-n,progressEvents:r}),d()},e.delay||0)});return e.progressIntervals&&(u=e.progressIntervals.map(n=>{const u=n/100,i=(e.delay||0)*u;return setTimeout(()=>{if(!o&&!s&&a){const n={total:e.fileSize||0,loaded:(e.fileSize||0)*u};r.push(n),a(n,t)}},i)})),{then:c.then.bind(c),abort:()=>(o=!0,s=!0,i&&i(),d(),!0),onProgress:e=>{a=e}}})(t,e);return s.onProgress(o),{request:we(s,t,r),abort:s.abort,senderType:Pe}},update:e=>{t={...t,...e}}}},ke=e=>t=>{const n=Ue(e);return t.update({send:n.send}),t},je=Ue;const Ne=Object(T.devFreeze)({BATCH_ADD:"BATCH-ADD",BATCH_START:"BATCH-START",BATCH_PROGRESS:"BATCH_PROGRESS",BATCH_FINISH:"BATCH-FINISH",BATCH_ABORT:"BATCH-ABORT",BATCH_CANCEL:"BATCH-CANCEL",ITEM_START:"FILE-START",ITEM_CANCEL:"FILE-CANCEL",ITEM_PROGRESS:"FILE-PROGRESS",ITEM_FINISH:"FILE-FINISH",ITEM_ABORT:"FILE-ABORT",ITEM_ERROR:"FILE-ERROR",ITEM_FINALIZE:"FILE-FINALIZE",REQUEST_PRE_SEND:"REQUEST_PRE_SEND",ALL_ABORT:"ALL_ABORT"}),Fe=Object(T.devFreeze)({ITEM_PROGRESS:"ITEM_PROGRESS",BATCH_PROGRESS:"BATCH_PROGRESS"}),Be=[T.FILE_STATES.FINISHED,T.FILE_STATES.ERROR,T.FILE_STATES.CANCELLED,T.FILE_STATES.ABORTED],xe=[T.BATCH_STATES.ADDED,T.BATCH_STATES.PROCESSING,T.BATCH_STATES.UPLOADING],He=[T.BATCH_STATES.ABORTED,T.BATCH_STATES.CANCELLED,T.BATCH_STATES.FINISHED],Me=(e,t)=>e.batches[t].batch,qe=(e,t,n)=>e.getState().items[t].batchId===n,$e=(e,t)=>{const n=e.getState(),r=n.items[t];return n.batches[r.batchId]},ze=(e,t)=>$e(e,t).batch,Ge=(e,t)=>{const n=((e,t)=>Me(e.getState(),t))(e,t);e.updateState(e=>{n.items.forEach(({id:t})=>{delete e.items[t];const n=e.itemQueue.indexOf(t);~n&&e.itemQueue.splice(n,1)})})},We=(e,t)=>{e.updateState(e=>{delete e.batches[t]})},Ve=(e,t,n)=>{const r=e.getState(),o=Me(r,t),s=r.items,a={...V(o),items:o.items.map(({id:e})=>V(s[e]))};e.trigger(n,a)},Ke=(e,t)=>{const n=ze(e,t);return xe.includes(n.state)},Xe=e=>He.includes(e.state),Qe={[T.FILE_STATES.PENDING]:null,[T.FILE_STATES.ADDED]:Ne.ITEM_START,[T.FILE_STATES.FINISHED]:Ne.ITEM_FINISH,[T.FILE_STATES.ERROR]:Ne.ITEM_ERROR,[T.FILE_STATES.CANCELLED]:Ne.ITEM_CANCEL,[T.FILE_STATES.ABORTED]:Ne.ITEM_ABORT,[T.FILE_STATES.UPLOADING]:Ne.ITEM_PROGRESS},Ye=e=>!!~Be.indexOf(e.state);var Je=(e,t,n)=>(t.forEach(t=>{const n=e.getState(),{id:r,info:o}=t;if(T.logger.debugLog("uploader.processor.queue: request finished for item - ",{id:r,info:o}),n.items[r]){e.updateState(e=>{const t=e.items[r];t.state=o.state,t.uploadResponse=o.response,t.uploadStatus=o.status,Ye(t)&&delete e.aborts[r]});const t=e.getState().items[r];o.state===T.FILE_STATES.FINISHED&&t.completed<100&&e.handleItemProgress(t,100,t.file?t.file.size:0),Qe[t.state]&&e.trigger(Qe[t.state],t),Ye(t)&&(((e,t)=>{e.updateState(e=>{e.batches[t].finishedCounter+=1})})(e,t.batchId),e.trigger(Ne.ITEM_FINALIZE,t))}const s=n.itemQueue.indexOf(r);~s&&e.updateState(e=>{e.itemQueue.splice(s,1);const t=e.activeIds.indexOf(r);~t&&e.activeIds.splice(t,1)})}),(e=>{const t=e.getState();Object.keys(t.batches).forEach(n=>{const{batch:r,finishedCounter:o}=t.batches[n],{orgItemCount:s}=r,a=Xe(r);s===o&&(e.updateState(e=>{const t=Me(e,n);t.state=a?t.state:T.BATCH_STATES.FINISHED,e.currentBatch===n&&(e.currentBatch=null)}),T.logger.debugLog("uploady.uploader.batchHelpers: cleaning up batch: "+r.id),a||Ve(e,n,Ne.BATCH_FINISH),Ge(e,n),We(e,n))})})(e),n(e));const Ze=Object(T.getMerge)({undefinedOverwrites:!0}),et=(e,t)=>{const n=t.map(e=>e.id);return e.updateState(e=>{e.activeIds=e.activeIds.concat(n)}),((e,t,n)=>Object(T.triggerUpdater)(e.trigger,Ne.REQUEST_PRE_SEND,{items:t,options:n}).then(e=>{if(e){if(T.logger.debugLog("uploader.queue: REQUEST_PRE_SEND event returned updated items/options",e),e.items){if(e.items.length!==t.length||!Object(T.isSamePropInArrays)(e.items,t,["id","batchId","recycled"]))throw new Error("REQUEST_PRE_SEND event handlers must return same items with same ids");t=e.items}e.options&&(n=Ze({},n,e.options))}return{items:t,options:n,cancelled:!1===e}}))(e,t,e.getState().batches[t[0].batchId].batchOptions).then(n=>{if(!n.cancelled){e.updateState(e=>{n.items.forEach(t=>{e.items[t.id]=t}),e.batches[t[0].batchId].batchOptions=n.options});const r=e.getState();n.items=n.items.map(e=>r.items[e.id]),n.options=r.batches[t[0].batchId].batchOptions}return n})},tt=(e,t,n)=>{const{items:r,options:o}=t,s=e.getState().batches[r[0].batchId].batch;let a;try{a=e.sender.send(r,s,o)}catch(e){T.logger.debugLog("uploader.queue: sender failed with unexpected error",e),a={request:Promise.resolve({status:0,state:T.FILE_STATES.ERROR,response:e.message}),abort:()=>!1,senderType:"exception-handler"}}const{request:u}=a;return((e,t,n)=>{e.updateState(e=>{t.forEach(t=>{e.items[t.id].state=T.FILE_STATES.UPLOADING,e.aborts[t.id]=n.abort})})})(e,r,a),u.then(t=>{const o=r.map(e=>({id:e.id,info:t}));Je(e,o,n)})};var nt=(e,t,n)=>{const r=e.getState();let o=Object.values(r.items);return o=o.filter(e=>!!~t.indexOf(e.id)),Promise.all(o.map(t=>e.runCancellable(Ne.ITEM_START,t))).then(t=>({allowedItems:t.map((t,n)=>t?null:((e,t)=>t.getState().items[e])(o[n].id,e)).filter(Boolean),cancelledResults:t})).then(({allowedItems:r,cancelledResults:s})=>(r.length?et(e,r).then():Promise.resolve()).then(r=>{let a;return r&&(r.cancelled?s=t.map(()=>!0):tt(e,r,n)),((e,t,n,r)=>{const o=n.map((e,n)=>e?t[n].id:null).filter(Boolean);if(o.length){const t=o.map(e=>({id:e,info:{status:0,state:T.FILE_STATES.CANCELLED,response:"cancel"}}));Je(e,t,r)}return!!o.length})(e,o,s,n)||(a=n(e)),a}))};const rt=(e,t)=>!!~e.getState().activeIds.flat().indexOf(t),ot=e=>{const t=e.getState().itemQueue,n=(e=>{const t=e.getState(),n=t.itemQueue,r=t.items;let o=0,s=n[o];for(;s&&(rt(e,s)||!Ke(e,s)||r[s].state!==T.FILE_STATES.ADDED);)o+=1,s=n[o];return s?o:-1})(e);let r,o=t[n];if(o){const s=$e(e,o),a=s.batch.id,u=s.batchOptions.maxGroupSize||0;if(s.batchOptions.grouped&&u>1){r=[];let s=!0;for(;r.length<u&&s;)r.push(o),o=t[n+r.length],s=o&&qe(e,o,a)}else r=[o]}return r},st=e=>{const t=ot(e);let n=Promise.resolve();if(t){const r=e.getCurrentActiveCount(),{concurrent:o=0,maxConcurrent:s=0}=e.getOptions();if(!r||o&&r<s){T.logger.debugLog("uploader.processor: Processing next upload - ",{ids:t,state:e.getState(),currentCount:r});let o=!1,s=Promise.resolve(!1);((e,t)=>{const n=ze(e,t);return e.getState().currentBatch!==n.id})(e,t[0])&&(s=((e,t)=>{const n=ze(e,t);return e.runCancellable(Ne.BATCH_START,n).then(t=>(t||e.updateState(e=>{e.currentBatch=n.id}),!t))})(e,t[0]).then(n=>(o=!n,o&&(((e,t)=>{const n=ze(e,t),r=n.id;T.logger.debugLog("uploady.uploader.batchHelpers: cancelling batch: ",{batch:n}),e.updateState(e=>{Me(e,r).state=T.BATCH_STATES.CANCELLED}),Ve(e,r,Ne.BATCH_CANCEL),Ge(e,r),We(e,r)})(e,t[0]),st(e)),o))),n=s.then(n=>{n||nt(e,t,st)})}}return n};var at=st;const ut=(e,t,n)=>(T.logger.debugLog(`uploader.queue: aborting ${t.state} item  - `,t),Je(e,[{id:t.id,info:{status:0,state:T.FILE_STATES.ABORTED,response:"aborted"}}],n),!0),it={[T.FILE_STATES.UPLOADING]:(e,t)=>(T.logger.debugLog("uploader.queue: aborting uploading item  - ",t),e.getState().aborts[t.id]()),[T.FILE_STATES.ADDED]:ut,[T.FILE_STATES.PENDING]:ut},dt=(e,t,n)=>{const r=e.getState().items[t],o=null==r?void 0:r.state;return!!it[o]&&it[o](e,r,n)};var ct=(e,t,n,r,o)=>{const{state:s,update:a}=K({itemQueue:[],currentBatch:null,batches:{},items:{},activeIds:[],aborts:{}}),u=()=>s,i=e=>{a(e)},d=e=>{if(s.items[e.id]&&!e.recycled)throw new Error(`Uploader queue conflict - item ${e.id} already exists`);e.recycled&&((e,t)=>{const{previousBatch:n}=t;if(t.recycled&&n&&e.getState().batches[n]){const{id:r}=ze(e,t.id);r===n&&e.updateState(e=>{const n=Me(e,r),o=n.items.findIndex(({id:e})=>e===t.id);~o&&n.items.splice(o,1)})}})(l,e),i(t=>{t.items[e.id]=e,t.itemQueue.push(e.id)})},c=(e,n,r)=>{s.items[e.id]&&(i(t=>{const o=t.items[e.id];o.loaded=r,o.completed=n}),t(Ne.ITEM_PROGRESS,u().items[e.id]))};r.on(Fe.ITEM_PROGRESS,c),r.on(Fe.BATCH_PROGRESS,e=>{var n;const r=null===(n=s.batches[e.id])||void 0===n?void 0:n.batch.items;if(r){const[n,o]=r.reduce((e,t)=>(e[0]+=t.completed,e[1]+=t.loaded,e),[0,0]);i(t=>{const s=t.batches[e.id].batch;s.completed=n/r.length,s.loaded=o}),t(Ne.BATCH_PROGRESS,s.batches[e.id].batch)}});const l={uploaderId:o,getOptions:()=>e,getCurrentActiveCount:()=>s.activeIds.length,getState:u,updateState:i,trigger:t,runCancellable:(e,...t)=>{if(!Object(T.isFunction)(n))throw new Error("cancellable is of wrong type");return n(e,...t)},sender:r,handleItemProgress:c};return Object(T.hasWindow)()&&T.logger.isDebugOn()&&(window[`__rpldy_${o}_queue_state`]=l),{updateState:i,getState:l.getState,runCancellable:l.runCancellable,uploadBatch:(e,t)=>{t&&i(n=>{n.batches[e.id].batchOptions=t}),at(l)},addBatch:(e,t)=>(i(n=>{n.batches[e.id]={batch:e,batchOptions:t,finishedCounter:0}}),e.items.forEach(d),Me(s,e.id)),abortItem:e=>((e,t,n)=>dt(e,t,n))(l,e,at),abortBatch:e=>{((e,t,n)=>{const r=e.getState().batches[t],o=null==r?void 0:r.batch;o&&!Xe(o)&&(e.updateState(e=>{Me(e,t).state=T.BATCH_STATES.ABORTED}),Ve(e,t,Ne.BATCH_ABORT),o.items.forEach(t=>dt(e,t.id,n)))})(l,e,at)},abortAll:()=>{((e,t)=>{const n=e.getState().items;Object.keys(n).forEach(n=>dt(e,n,t)),e.trigger(Ne.ALL_ABORT)})(l,at)},clearPendingBatches:()=>{(e=>{const t=e.getState().batches;Object.keys(t).filter(e=>t[e].batch.state===T.BATCH_STATES.PENDING).forEach(t=>{Ge(e,t),We(e,t)})})(l)},uploadPendingBatches:e=>{((e,t)=>{e.updateState(e=>{Object.keys(e.batches).forEach(n=>{const r=e.batches[n],{batch:o,batchOptions:s}=r;o.state===T.BATCH_STATES.PENDING&&(o.items.forEach(e=>{e.state=T.FILE_STATES.ADDED}),o.state=T.BATCH_STATES.ADDED,r.batchOptions=Object(T.merge)({},s,t))})})})(l,e),at(l)}}};const lt=()=>!0,ft=Object(T.devFreeze)({autoUpload:!0,clearPendingOnAdd:!1,inputFieldName:"file",concurrent:!1,maxConcurrent:2,grouped:!1,maxGroupSize:5,method:"POST",params:{},fileFilter:lt,forceJsonResponse:!1,withCredentials:!1,destination:{},send:null,sendWithFormData:!0}),pt=(e,t,n,r)=>{((e,t,n,r)=>{e.forEach(e=>{T.logger.debugLog(`uploady.uploader.processor: file: ${e.id} progress event: loaded(${n}) - completed(${t})`),r(Fe.ITEM_PROGRESS,e,t,n)})})(e,Math.min(n.loaded/n.total*100,100)/e.length,n.loaded/e.length,r),r(Fe.BATCH_PROGRESS,t)};var gt=()=>{const{trigger:e,target:t}=Re({send:(t,n,r)=>{const o=r.destination,s=null==o?void 0:o.url,a=Object(T.throttle)(r=>pt(t,n,r,e),50,!0);return(Object(T.isFunction)(r.send)?r.send:U)(t,s,{method:(null==o?void 0:o.method)||r.method||ft.method,paramName:(null==o?void 0:o.filesParamName)||r.inputFieldName||"file",params:{...r.params,...null==o?void 0:o.params},forceJsonResponse:r.forceJsonResponse,withCredentials:r.withCredentials,formatGroupParamName:r.formatGroupParamName,headers:null==o?void 0:o.headers,sendWithFormData:r.sendWithFormData,formatServerResponse:r.formatServerResponse},a)}},Object.values(Fe));return t};const ht=Object(T.hasWindow)()&&"FileList"in window,bt=(e,t=0)=>{let n=e;return Object(T.isProduction)()||(t<3&&M(e)?n=V(e):t<3&&q(e)&&(n=Array.isArray(e)?Object.keys(e).map(t=>bt(e[t])):Object.keys(e).reduce((n,r)=>(n[r]=bt(e[r],t+1),n),{}))),n};let mt=0;var St=(e,t,n)=>{mt+=1;const r="batch-"+mt,o=(e=>ht&&e instanceof FileList||"[object FileList]"===e.toString())(e);e=Array.isArray(e)||o?e:[e];const s=!n.autoUpload,a=((e,t,n,r)=>Array.prototype.filter.call(t,r||lt).map(t=>Object(T.createBatchItem)(t,e,n)))(r,e,s,n.fileFilter);return{id:r,uploaderId:t,items:a,state:s?T.BATCH_STATES.PENDING:T.BATCH_STATES.ADDED,completed:0,loaded:0,orgItemCount:a.length}};const Et=Object.values(Ne);let vt=0;var Ot=e=>{vt+=1;const t="uploader-"+vt;let n=!1;const r={};T.logger.debugLog(`uploady.uploader: creating new instance (${t})`,{options:e,counter:vt});let o=(e=>{return{...ft,...e,destination:e&&e.destination?(t=e.destination,{params:{},...t}):null};var t})(e);const s=()=>{c.clearPendingBatches()};let{trigger:a,target:u}=Re({id:t,update:e=>(o=Object(T.merge)({},o,e),u),add:(e,t)=>{const n=Object(T.merge)({},o,t);n.clearPendingOnAdd&&s();const r=c.addNewBatch(e,u.id,n);let a;return r.items.length?a=c.runCancellable(Ne.BATCH_ADD,r,n).then(e=>{e?(r.state=T.BATCH_STATES.CANCELLED,i(Ne.BATCH_CANCEL,r)):(T.logger.debugLog(`uploady.uploader [${u.id}]: new items added - auto upload =\n                        ${String(n.autoUpload)}`,r.items),n.autoUpload&&c.process(r))}):T.logger.debugLog(`uploady.uploader: no items to add. batch ${r.id} is empty. check fileFilter if this isn't intended`),a||Promise.resolve()},upload:e=>{c.processPendingBatches(e)},abort:e=>{c.abort(e)},abortBatch:e=>{c.abortBatch(e)},getOptions:()=>Object(T.clone)(o),clearPending:s,registerExtension:(e,t)=>{Object(T.invariant)(n,"Uploady - uploader extensions can only be registered by enhancers"),Object(T.invariant)(!r[e],"Uploady - uploader extension by this name [%s] already exists",e),T.logger.debugLog("uploady.uploader: registering extension: "+e.toString(),t),r[e]=t},getExtension:e=>r[e]},Et,{canAddEvents:!1,canRemoveEvents:!1});const i=(e,...t)=>{const n=Ce(()=>t.map(bt));return a(e,n)},d=Object(T.triggerCancellable)(i);if(o.enhancer){n=!0;const e=o.enhancer(u,i);n=!1,u=e||u}const c=((e,t,n,r)=>{const o=gt(),s=ct(n,e,t,o,r);return{process:(e,t)=>{s.uploadBatch(e,t)},abortBatch:e=>{s.abortBatch(e)},abort:e=>{e?s.abortItem(e):s.abortAll()},addNewBatch:(e,t,n)=>{const r=St(e,t,n);return s.addBatch(r,n)},runCancellable:s.runCancellable,clearPendingBatches:()=>{s.clearPendingBatches()},processPendingBatches:e=>{s.uploadPendingBatches(e)}}})(i,d,o,u.id);return Object(T.devFreeze)(u)},Tt=(...e)=>(t,...n)=>e.reduce((e,t)=>t(e,...n)||e,t),yt=Ot;const It=Symbol.for("__upldy-retry__"),At="RETRY_EVENT",Lt=[T.FILE_STATES.ABORTED,T.FILE_STATES.ERROR],_t=(e,t,n,r,o)=>{const s=t.getState().failed,a=(r=r||Object.keys(s)).map(e=>s[e]).filter(Boolean);var u;a.length&&(o={...o||null,autoUpload:void 0===(null===(u=o)||void 0===u?void 0:u.autoUpload)||o.autoUpload},n(At,{items:a,options:o}),r.forEach(e=>((e,t)=>{e.updateState(e=>{const n=e.failed[t].batchId;delete e.failed[t];const r=e.batchIdsMap[n].indexOf(t);e.batchIdsMap[n].splice(r,1),e.batchIdsMap[n].length||delete e.batchIdsMap[n]})})(t,e)),e.add(a,o));return!!a.length},Rt=(e,t,n,r,o)=>{let s;return r?s=((e,t,n,r,o)=>(T.logger.debugLog("uploady.retry: about to retry item: "+r),_t(e,t,n,[r],o)))(e,t,n,r,o):(T.logger.debugLog("uploady.retry: about to retry all failed item"),s=_t(e,t,n,null,o)),s};var Ct=(e,t)=>{const n=(()=>{const{state:e,update:t}=K({batchIdsMap:{},failed:{}});return{updateState:e=>{t(e)},getState:()=>e}})();return((e,t)=>{e.on(Ne.ITEM_FINALIZE,e=>{~Lt.indexOf(e.state)&&t.updateState(t=>{t.failed[e.id]=e;(t.batchIdsMap[e.batchId]=t.batchIdsMap[e.batchId]||[]).push(e.id)})})})(e,n),e.registerExtension(It,{retry:(r,o)=>Rt(e,n,t,r,o),retryBatch:(r,o)=>((e,t,n,r,o)=>{var s;T.logger.debugLog("uploady.retry: about to retry batch: "+r);const a=null===(s=t.getState().batchIdsMap[r])||void 0===s?void 0:s.slice();return!!a&&_t(e,t,n,a,o)})(e,n,t,r,o)}),e},Pt=e=>{let t=!1;(()=>{try{if(Object(T.hasWindow)()&&e in window){const n="__lsTest";window[e].setItem(n,"__test-"+Date.now()),window[e].removeItem(n),t=!0}}catch(e){}})();const n=["key","getItem","setItem","removeItem","clear"].reduce((n,r)=>(n[r]=(...n)=>t?window[e][r](...n):void 0,n),{});return n.isSupported=t,Object.defineProperty(n,"length",{get:()=>t?window[e].length:0}),n},Dt=Pt("localStorage"),wt=Pt("sessionStorage");const Ut=Object(T.devFreeze)({...k,featureDetection:!1,featureDetectionUrl:null,version:"1.0.0",resume:!0,overrideMethod:!1,deferLength:!1,sendDataOnCreate:!1,storagePrefix:"__rpldy-tus__",lockedRetryDelay:2e3,forgetOnSuccess:!1,ignoreModifiedDateInStorage:!1}),kt=(e,t,n)=>{const r=[e.file.name,e.file.type,e.file.size,t.ignoreModifiedDateInStorage?null:e.file.lastModified,n].filter(Boolean).join("/");return`${t.storagePrefix||Ut.storagePrefix}${r}`},jt=(e,t,n,r)=>{n.resume&&Dt.setItem(kt(e,n,r),JSON.stringify({time:Date.now(),uploadUrl:t}))},Nt=(e,t,n)=>{const r=kt(e,t,n);Dt.removeItem(r)},Ft=e=>{const t=e.storagePrefix||Ut.storagePrefix;for(let e=0;e<Dt.length;e++){const n=Dt.key(e);n&&!n.indexOf(t)&&Dt.removeItem(n)}},Bt=Symbol.for("__upldy-tus__"),xt="rpldy-tus-sender",Ht=[200,201,204],Mt="creation-with-upload",qt="concatenation",$t="creation-defer-length",zt=e=>{const t=e.params&&Object.keys(e.params);return null!=t&&t.length?t.map(t=>`${t} ${btoa(e.params[t])}`).join(","):void 0},Gt=(e,t)=>e.then(e=>(e.state===T.FILE_STATES.FINISHED&&(e.response.location=t),e));var Wt=(e,t,n,r,o)=>{const{options:s}=n.getState(),a={"tus-resumable":s.version,"Upload-Defer-Length":s.deferLength?1:void 0,"Upload-Length":s.deferLength?void 0:e.file.size,"Upload-Metadata":o?void 0:zt(r),"Content-Type":s.sendDataOnCreate?"application/offset+octet-stream":void 0,...r.headers};let u=null;if(T.logger.debugLog(`tusSender.create - creating upload for ${e.id} at: ${t}`),s.sendDataOnCreate){T.logger.debugLog("tusSender.create - adding first chunk to create request");const t=+s.chunkSize;u=t<e.file.size?F(e.file,0,t):e.file}const i=Object(T.request)(t,u,{method:"POST",headers:a});let d=!1;return{request:i.then(r=>{let o=null;return r&&~Ht.indexOf(r.status)?o=((e,t,n,r,o)=>{const{options:s}=n.getState(),a=((e,t)=>{let n;return n=/^(http:|https:)?\/\//.test(t)?t:[e.replace(/\/$/,""),t.replace(/^\//,"")].join("/"),n})(t,r.getResponseHeader("Location"));let u=0,i=!1;if(T.logger.debugLog(`tusSender.create: successfully created upload for item: ${e.id} - upload url = ${a}`),s.sendDataOnCreate){const e=parseInt(r.getResponseHeader("Upload-Offset"));u=isNaN(e)?u:e,i=+s.parallel>1&&u===(null==o?void 0:o.size)}return n.updateState(t=>{t.items[e.id].uploadUrl=a,t.items[e.id].offset=u}),{offset:u,uploadUrl:a,isNew:!0,isDone:i}})(e,t,n,r,u):T.logger.debugLog("tusSender.create: create upload failed for item: "+e.id,r),o}).catch(e=>(T.logger.debugLog("tusSender.create: create upload failed",e),null)).finally(()=>{d=!0}),abort:()=>(d||(T.logger.debugLog("tusSender.create: aborting create request for item: "+e.id),i.xhr.abort()),!d)}};const Vt=(e,t,n)=>(Nt(e,t,n),{isNew:!1,canResume:!1}),Kt=(e,t,n,r,o)=>{const{options:s}=n.getState();T.logger.debugLog(`tusSender.resume - resuming upload for ${e.id}${r?"-"+r:""} at: ${t}`);const a=Object(T.request)(t,null,{method:"HEAD",headers:{"tus-resumable":s.version}});let u=!1;return{request:a.then(a=>{let u;return a&&~Ht.indexOf(a.status)?u=((e,t,n,r)=>{let o=!1,s=!1;T.logger.debugLog(`tusSender.resume - successfully initiated resume for item: ${e.id} - upload url = ${t}`);const a=parseInt(r.getResponseHeader("Upload-Offset"));if(!isNaN(a)){const u=parseInt(r.getResponseHeader("Upload-Length"));isNaN(u)&&!n.getState().options.deferLength||(s=a===u,o=!s,n.updateState(n=>{n.items[e.id].uploadUrl=t,n.items[e.id].offset=a}))}return{offset:a,uploadUrl:t,isNew:!1,isDone:s,canResume:o}})(e,t,n,a):423===(null==a?void 0:a.status)&&0===o?(T.logger.debugLog(`tusSender.resume: upload is locked for item: ${e.id}. Will retry in ${+s.lockedRetryDelay}`,a),u=((e,t,n,r,o)=>new Promise(s=>{setTimeout(()=>{Kt(e,t,n,r,o).request.then(s)},n.getState().options.lockedRetryDelay)}))(e,t,n,r,1)):(T.logger.debugLog(`tusSender.resume: failed for item: ${e.id}${r?"-"+r:""}`,a),u=Vt(e,s,r)),u}).catch(t=>(T.logger.debugLog("tusSender.resume: resume upload failed unexpectedly",t),Vt(e,s,r))).finally(()=>{u=!0}),abort:()=>(u||(T.logger.debugLog("tusSender.resume: aborting resume request for item: "+e.id),a.xhr.abort()),!u)}};var Xt=(e,t,n,r,o)=>o.then(o=>{let s=o;if(o.state===T.FILE_STATES.FINISHED){const{options:a,items:u}=n.getState(),i=u[e.id];if(i){const d=i.parallelChunks,c=d.filter(e=>{var t;return null===(t=u[e])||void 0===t?void 0:t.uploadUrl}).map(e=>u[e].uploadUrl);if(c.length!==d.length)throw new Error(`tusSender: something went wrong. found ${c.length} upload urls for ${d.length} chunks`);const l={"tus-resumable":a.version,"Upload-Concat":"final;"+c.join(" "),"Upload-Metadata":zt(r)};T.logger.debugLog("tusSender.finalizeParallel: sending finalizing request",{url:t,headers:l});const f=Object(T.request)(t,null,{method:"POST",headers:l});n.updateState(t=>{t.items[e.id].abort=()=>(f.xhr.abort(),!0)}),s=((e,t)=>e.catch(e=>(T.logger.debugLog("tusSender.finalizeParallel: finalize request failed unexpectedly!",e),e)).then(e=>{let n;const r=(null==e?void 0:e.status)||0,o=!!~Ht.indexOf(r),s=o&&(null==e?void 0:e.getResponseHeader)&&e.getResponseHeader("Location");return s?(T.logger.debugLog("tusSender.finalizeParallel: successfully finalized parallel upload",s),n=Gt(Promise.resolve(t),s)):(T.logger.debugLog("tusSender.finalizeParallel: parallel upload finalize failed!",r),n={status:r,state:T.FILE_STATES.ERROR,response:{message:(null==e?void 0:e.response)||(o&&!s?"No valid location header for finalize request":"")}}),n}))(f,o)}}return s});const Qt=(e,t,n,r,o,s,a,u,i)=>a.then(a=>{let d,c=!1;if(a?a.isDone?(T.logger.debugLog("tusSender.handler: resume found server has completed file for item: "+e[0].id,e[0]),d=Gt(Promise.resolve({status:200,state:T.FILE_STATES.FINISHED,response:{message:"TUS server has file"}}),a.uploadUrl)):a.isNew||a.canResume?d=i?((e,t,n,r)=>{const o=e[0];return n.uploadUrl&&jt(o,n.uploadUrl,t.getState().options,r),T.logger.debugLog("tusSender.handler: created upload for parallelized chunk: "+o.id),Promise.resolve({status:200,state:T.FILE_STATES.UPLOADING,response:"TUS server created upload for parallelized part"})})(e,o,a,i):((e,t,n,r,o,s,a)=>{const{options:u}=o.getState(),i=e[0];T.logger.debugLog(`tusSender.handler: init request finished. sending item ${i.id} as chunked`,a),a.isNew&&a.uploadUrl&&jt(i,a.uploadUrl,u),(a.canResume||u.sendDataOnCreate&&a.offset)&&(n={...n,startByte:a.offset});const d=s.send(e,t,n,r);return o.updateState(e=>{e.items[i.id].abort=d.abort}),+u.parallel>1?Xt(i,t,o,n,d.request):Gt(d.request,a.uploadUrl)})(e,t,n,r,o,s,a):c=!0:c=u,c){T.logger.debugLog("tusSender.handler: resume init failed. Will try creating a new upload for item: "+e[0].id);const{request:a}=Wt(e[0],t,o,n);d=Qt(e,t,n,r,o,s,a)}return d||Promise.resolve({status:0,state:T.FILE_STATES.ERROR,response:"TUS initialize failed"})});var Yt=Qt;var Jt=(e,t,n,r,o,s,a=null)=>{const{options:u}=o.getState(),i=+u.parallel>1&&!a,d=e[0],c=!i&&((e,t,n)=>{let r;const o=kt(e,t,n);if(t.resume)try{const e=Dt.getItem(o);if(e){r=JSON.parse(e).uploadUrl}}catch(e){T.logger.debugLog("tusSender.resumableStore: failed to retrieve persisted data for key: "+o,e)}return r})(d,u,a);let l;((e,t)=>{t.updateState(t=>{t.items[e.id]={id:e.id,uploadUrl:null,size:e.file.size,offset:0,parallelChunks:[]}})})(d,o),l=i?{request:Promise.resolve({isNew:!0}),abort:()=>!0}:c?((e,t,n,r)=>Kt(e,t,n,r,0))(d,c,o,a):Wt(d,t,o,n,a);return{request:Yt(e,t,n,r,o,s,l.request,!!c,a),abort:()=>(T.logger.debugLog("tusSender.handler: abort called for item: "+d.id),l.abort(),l.request.then(e=>{if(e){T.logger.debugLog("tusSender.handler: aborting chunked upload for item:  "+d.id);const e=o.getState().items[d.id].abort;e&&e()}}),!0)}};const Zt=(e,t)=>`_prlChunk_${+e.chunkSize}_${t}`;var en=(e,t,n)=>{N&&(e.on(Ne.ITEM_FINALIZE,e=>{const{items:n,options:r}=t.getState(),o=n[e.id];if(o){T.logger.debugLog(`tusSender.handleEvents: item ${e.id} finalized (${e.state}). Removing from state`);const n=o.parallelChunks;t.updateState(t=>{n.length&&n.forEach(e=>{delete t.items[e]}),delete t.items[e.id]}),r.forgetOnSuccess&&(T.logger.debugLog("tusSender.handleEvents: forgetOnSuccess enabled, removing item url from storage: "+e.id),Nt(e,r))}}),e.on(X.CHUNK_START,e=>{const{options:r}=t.getState(),o=+r.parallel>1;return(o?((e,t,n)=>{const{item:r,chunkItem:o,url:s,sendOptions:a,onProgress:u,chunk:i}=n,{options:d}=e.getState();e.updateState(e=>{e.items[r.id].parallelChunks.push(o.id)});return Jt([o],s,{...a,params:null},u,e,t,Zt(d,i.index)).request.then(e=>e.state!==T.FILE_STATES.FINISHED)})(t,n,e):Promise.resolve(!0)).then(n=>n&&((e,t,n)=>{const{item:r,chunk:o,chunkItem:s,remainingCount:a}=t,{options:u}=e.getState(),i=e.getState().items[n?s.id:r.id],d=n?0:i.offset||o.start,c={"tus-resumable":u.version,"Upload-Offset":d,"Content-Type":"application/offset+octet-stream","Content-Range":void 0,"X-HTTP-Method-Override":u.overrideMethod?"PATCH":void 0,"Upload-Length":u.deferLength&&!a?r.file.size:void 0,"Upload-Concat":n?"partial":void 0};return T.logger.debugLog("tusSender.handleEvents: chunk start handler. offset = "+d,{headers:c,url:i.uploadUrl}),{sendOptions:{sendWithFormData:!1,method:u.overrideMethod?"POST":"PATCH",headers:c},url:i.uploadUrl}})(t,e,o))}),e.on(X.CHUNK_FINISH,({item:e,chunk:n,uploadData:r})=>{const{items:o,options:s}=t.getState();if(+s.parallel>1){if(s.forgetOnSuccess){const t=Zt(s,n.index);T.logger.debugLog("tusSender.handleEvents: forgetOnSuccess enabled, removing parallel chunk url from storage: "+t),Nt(e,s,t)}}else if(o[e.id]){const{status:o,response:s}=r;T.logger.debugLog(`tusSender.handleEvents: received upload response (code: ${o}) for : ${e.id}, chunk: ${n.id}`,s),~Ht.indexOf(o)&&s.headers&&t.updateState(t=>{t.items[e.id].offset=s.headers["upload-offset"]})}}))};const tn=e=>"rpldy_tus_fd_"+e,nn={[qt]:(e,t)=>{+t.getState().options.parallel>1&&!~e.indexOf(qt)&&(T.logger.debugLog(`tusSender.featureDetection: disabling parallel uploads, ${qt} extension not available`),t.updateState(e=>{e.options.parallel=1}))},[Mt]:(e,t)=>{t.getState().options.sendDataOnCreate&&!~e.indexOf(Mt)&&(T.logger.debugLog(`tusSender.featureDetection: disabling create with data, ${Mt} extension not available`),t.updateState(e=>{e.options.sendDataOnCreate=!1}))},[$t]:(e,t)=>{t.getState().options.deferLength&&!~e.indexOf($t)&&(T.logger.debugLog(`tusSender.featureDetection: disabling defer length, ${$t} extension not available`),t.updateState(e=>{e.options.deferLength=!1}))}},rn=(e,t,n)=>{const{options:r}=e.getState();if(t){T.logger.debugLog("tusSender.featureDetection: retrieved extensions from server",t);const n=t.split(",");if(n.length&&r.onFeaturesDetected){const t=r.onFeaturesDetected(n);t&&e.updateState(e=>{e.options=Object(T.merge)({},e.options,t)})}else Object.keys(nn).forEach(t=>{nn[t](n,e)})}n&&n!==e.getState().options.version&&(T.logger.debugLog("tusSender.featureDetection: setting version to server version: "+n),e.updateState(e=>{e.options.version=n})),e.updateState(e=>{e.featureDetection={processed:!0,version:n,extensions:t}})},on=(e,t,n)=>e.catch(e=>{T.logger.debugLog("tusSender.featureDetection: failed to retrieve data from server",e)}).then(e=>{if(e&&~Ht.indexOf(e.status)){const r=e.getResponseHeader("Tus-Extension"),o=e.getResponseHeader("Tus-Resumable");r&&wt.setItem(tn(t),JSON.stringify({extensions:r,versions:o})),rn(n,r,o)}}),sn=(e,t)=>{const{options:n}=t.getState(),r=Object(T.request)(e,null,{method:"OPTIONS",headers:{"tus-resumable":n.version}});return{request:on(r,e,t),abort:()=>(r.xhr.abort(),!0)}};var an=(e,t)=>{let n;const{options:r,featureDetection:o}=t.getState();e=r.featureDetectionUrl||e,T.logger.debugLog("tusSender.featureDetection: about to request server info",e);const s=wt.getItem(tn(e));return o.processed||(n=s?((e,t,n)=>{let r;try{var o;if(r=JSON.parse(n),null!==(o=r)&&void 0!==o&&o.extensions){const{extensions:e,version:n}=r;T.logger.debugLog("tusSender.featureDetection: retrieved feature detection data from session storage",r),rn(t,e,n)}else r=null}catch(e){T.logger.debugLog("tusSender.featureDetection: failed to load feature detection data from session storage")}return r||wt.removeItem(tn(e)),r?null:sn(e,t)})(e,t,s):sn(e,t)),n};var un=(e,t)=>N?(n,r,o,s)=>{let a;if(!r)throw new I(xt);if(n.length>1||n[0].url)a=e.send(n,r,o,s);else{T.logger.debugLog("tusSender: sending file using TUS protocol");let u=t.getState().options.featureDetection?an(r,t):null;const{request:i,abort:d}=((e,t,n,r,o,s,a)=>{let u;const i=()=>{const a=Jt(e,t,n,r,o,s);return u=a.abort,a.request};return{request:a?a.request.then(i,i):i(),abort:()=>u?u():(null==a?void 0:a.abort())||!1}})(n,r,o,s,t,e,u);a={request:i,abort:d,senderType:xt}}return a}:U;const dn=e=>(((e=(e=>Object(T.merge)({},Ut,e))(e)).sendDataOnCreate||e.parallel)&&e.deferLength&&(T.logger.debugLog("tusSender: turning off deferLength - cannot be used when sendDataOnCreate or parallel is enabled"),e.deferLength=!1),e.chunked=!0,e);var cn=(e,t,n)=>{t=dn(t);const r=ie(t,n),o=((e,t)=>{const{state:n,update:r}=K({options:t,items:{},featureDetection:{extensions:null,version:null,processed:!1}}),o={getState:()=>n,updateState:r};return Object(T.hasWindow)()&&T.logger.isDebugOn()&&(window[`__rpldy_${e.id}_tus_state`]=o),o})(e,t);en(e,o,r);return{send:un(r,o),getOptions:()=>o.getState().options}},ln=e=>(t,n)=>{const r=cn(t,e,n);return t.update({send:r.send}),t.registerExtension(Bt,{getOptions:r.getOptions}),t},fn=ln,pn=n("EcSs"),gn=n.n(pn),hn=n("cDcd"),bn=n.n(hn);const mn=Symbol.for("rpldy_component");var Sn=n("Lrr1");const En=(e,t)=>{let n,r,o=!1;t?n=t:T.logger.debugLog("Uploady context - didn't receive input field ref - waiting for external ref");const s=()=>{var e;return null===(e=n)||void 0===e?void 0:e.current},a=()=>{const e=s();Object(T.invariant)(e,"Uploady - Context. File input isn't available"),e.removeEventListener("change",a);const t=r;r=null,u(e.files,t)},u=(t,n)=>{e.add(t,n)};return Object(Sn.d)(),{hasUploader:()=>!!e,getInternalFileInput:()=>(n&&(o=!0),n),setExternalFileInput:e=>{o=!0,n=e},getIsUsingExternalInput:()=>o,showFileUpload:e=>{const t=s();Object(T.invariant)(t,"Uploady - Context. File input isn't available"),r=e,t.removeEventListener("change",a),t.addEventListener("change",a),t.value="",t.click()},upload:u,processPending:t=>{e.upload(t)},clearPending:()=>{e.clearPending()},setOptions:t=>{e.update(t)},getOptions:()=>e.getOptions(),getExtension:t=>e.getExtension(t),abort:t=>{e.abort(t)},abortBatch:t=>{e.abortBatch(t)},on:(t,n)=>e.on(t,n),once:(t,n)=>e.once(t,n),off:(t,n)=>e.off(t,n)}};var vn=bn.a.createContext(null);var On=e=>(Object(T.invariant)(!Object(Sn.a)(),"Uploady - Valid UploadyContext not found.\nYou may be using packages of different Uploady versions. <Uploady> and all other packages using the context provider must be of the same version: %s",Object(Sn.b)()),Object(T.invariant)(e&&e.hasUploader(),"Uploady - Valid UploadyContext not found. Make sure you render inside <Uploady>"),e);var Tn=()=>On(Object(hn.useContext)(vn));const yn=(e,t)=>{const n=Tn(),{on:r,off:o}=n;Object(hn.useEffect)(()=>(r(e,t),()=>{o(e,t)}),[e,t,r,o])},In=(e,t)=>(n,r)=>{const[o,s]=Object(hn.useState)(null),a=Object(hn.useCallback)((e,...o)=>{r&&e.id!==r||(s(t(e,...o)),n&&n(e,...o))},[n,r]);return yn(e,a),o},An=(e,t=!0)=>(n,r)=>{const o=Object(hn.useCallback)((e,...o)=>!n||t&&r&&e.id!==r?void 0:n(e,...o),[n,r]);yn(e,o)},Ln=(e,t)=>{Object(T.isProduction)()||e||console.warn(t)},_n=e=>{e[mn]=!0},Rn=e=>{var t,n;return!0===e[mn]||!0===(null===(t=e.target)||void 0===t?void 0:t[mn])||!0===(null===(n=e.render)||void 0===n?void 0:n[mn])},Cn=An(Ne.BATCH_ADD,!1),Pn=An(Ne.BATCH_START),Dn=An(Ne.BATCH_FINISH),wn=An(Ne.BATCH_CANCEL),Un=An(Ne.BATCH_ABORT),kn=In(Ne.BATCH_PROGRESS,e=>({...e})),jn=An(Ne.ITEM_START),Nn=An(Ne.ITEM_FINISH),Fn=An(Ne.ITEM_CANCEL),Bn=An(Ne.ITEM_ERROR),xn=An(Ne.ITEM_ABORT),Hn=An(Ne.ITEM_FINALIZE),Mn=In(Ne.ITEM_PROGRESS,e=>({...e})),qn=An(Ne.REQUEST_PRE_SEND,!1),$n=An(Ne.ALL_ABORT,!1);var zn=e=>{const t=Tn();return e&&t.setOptions(e),t.getOptions()};var Gn=()=>{const e=Tn();return Object(hn.useCallback)(t=>e.abort(t),[e])};var Wn=()=>{const e=Tn();return Object(hn.useCallback)(t=>e.abortBatch(t),[e])};var Vn=()=>{const e=Tn();return Object(hn.useCallback)(()=>e.abort(),[e])};var Kn=e=>{const{listeners:t,debug:n,children:r,inputRef:o,...s}=e;T.logger.setDebug(!!n),T.logger.debugLog("@@@@@@ Uploady Rendering @@@@@@",e);const a=((e,t)=>{const n=Object(hn.useMemo)(()=>(T.logger.debugLog("Uploady creating a new uploader instance",e),yt(e)),[e.enhancer]);return n.update(e),Object(hn.useEffect)(()=>(t&&(T.logger.debugLog("Uploady setting event listeners",t),Object.entries(t).forEach(([e,t])=>{n.on(e,t)})),()=>{t&&(T.logger.debugLog("Uploady removing event listeners",t),Object.entries(t).forEach(([e,t])=>n.off(e,t)))}),[t,n]),n})(s,t),u=Object(hn.useMemo)(()=>En(a,o),[a,o]);return bn.a.createElement(vn.Provider,{value:u},r)},Xn=e=>t=>{const n=Tn(),{id:r}=t,[o,s]=Object(hn.useState)({update:null,data:null});return Object(hn.useLayoutEffect)(()=>{const e=t=>t.items.find(e=>e.id===r)&&new Promise(r=>{s(()=>({update:t=>{n.off(Ne.REQUEST_PRE_SEND,e),r(t)},data:t}))});return r&&n.on(Ne.REQUEST_PRE_SEND,e),()=>{r&&n.off(Ne.REQUEST_PRE_SEND,e)}},[n,r]),bn.a.createElement(e,gn()({},t,{updateRequest:o.update,requestData:o.data}))},Qn=n("faye"),Yn=n.n(Qn);const Jn=(e,t,n)=>bn.a.createElement("input",gn()({},e,{name:t.inputFieldName,type:"file",ref:n})),Zn=Object(hn.memo)(Object(hn.forwardRef)(({container:e,noPortal:t,...n},r)=>{const o=zn(),s=e&&1===e.nodeType;return Object(T.invariant)(s||!Object(T.hasWindow)(),"Uploady - Container for file input must be a valid dom element"),t?Jn(n,o,r):((e,t,n,r,o)=>e&&t?Yn.a.createPortal(Jn(n,r,o),e):null)(e,s,n,o,r)}));var er=e=>{const{multiple:t=!0,capture:n,accept:r,webkitdirectory:o,children:s,inputFieldContainer:a,customInput:u,fileInputId:i,noPortal:d=!1,...c}=e,l=u?null:a||(Object(T.hasWindow)()?document.body:null),f=Object(hn.useRef)();return bn.a.createElement(Kn,gn()({},c,{inputRef:f}),u?null:bn.a.createElement(Zn,{container:l,multiple:t,capture:n,accept:r,webkitdirectory:o,style:{display:"none"},ref:f,id:i,noPortal:d}),s)};const tr=e=>{const t=e.closest("form");let n={filesParamName:e.getAttribute("name"),method:void 0,url:void 0};if(t){const e=t.getAttribute("method"),r=(e=>{const t=window.location;let n,r=e.getAttribute("action")||"";switch(r=r.replace(/\s/g,""),!0){case""===r:r=t.href;break;case r.startsWith("/"):r=`${t.protocol}//${t.host}${r}`;break;case!/:\/\//.test(r):n=t.pathname.split("/").slice(0,-1).concat("").join("/"),r=`${t.protocol}//${t.host}${n}${r}`}return r})(t);n.method=e?e.toUpperCase():void 0,n.url=r,T.logger.debugLog(`Uploady.useFileInput: using custom input's parent form url ${n.url} and method ${n.method||""}`)}return n};var nr=e=>{const t=Tn();return e&&t.setExternalFileInput(e),Object(hn.useEffect)(()=>{if(null!=e&&e.current&&e.current.closest){const n=e.current,r=t.getOptions();if(!r.destination||!r.destination.url){const e=tr(n);t.setOptions({destination:e})}}},[e,t]),e||t.getInternalFileInput()},rr=er;Ln(N||!Object(T.hasWindow)(),"This browser doesn't support chunking. Consider using @rpldy/uploady instead");var or=e=>{const{chunked:t,chunkSize:n,retries:r,parallel:o,...s}=e,a=Object(hn.useMemo)(()=>N?((e,t)=>{const n=ce(e);return t?Tt(n,t):n})({chunked:t,chunkSize:n,retries:r,parallel:o},e.enhancer):void 0,[e.enhancer,t,n,r,o]);return bn.a.createElement(rr,gn()({},s,{enhancer:a}))};const sr=An(X.CHUNK_START,!1),ar=An(X.CHUNK_FINISH,!1);var ur=or;const ir="Uploady - retry was not registered. Make sure you used the enhancer";var dr=()=>{const e=Tn().getExtension(It);return Object(T.invariant)(e,ir),e.retry},cr=()=>{const e=Tn().getExtension(It);return Object(T.invariant)(e,ir),e.retryBatch};var lr=An(At,!1),fr=Ct;Ln(N,"This browser doesn't support chunking. Consider using @rpldy/uploady instead");var pr=e=>{const{chunked:t,chunkSize:n,retries:r,parallel:o,version:s,featureDetection:a,featureDetectionUrl:u,onFeaturesDetected:i,resume:d,deferLength:c,overrideMethod:l,sendDataOnCreate:f,storagePrefix:p,lockedRetryDelay:g,forgetOnSuccess:h,ignoreModifiedDateInStorage:b,...m}=e,S=Object(hn.useMemo)(()=>N?((e,t)=>{const n=ln(e);return t?Tt(n,t):n})({chunked:t,chunkSize:n,retries:r,parallel:o,version:s,featureDetection:a,featureDetectionUrl:u,onFeaturesDetected:i,resume:d,deferLength:c,overrideMethod:l,sendDataOnCreate:f,storagePrefix:p,lockedRetryDelay:g,forgetOnSuccess:h,ignoreModifiedDateInStorage:b},e.enhancer):void 0,[e.enhancer,t,n,r,o,s,a,u,i,d,c,l,f,p,g,h,b]);return bn.a.createElement(rr,gn()({},m,{enhancer:S}))};var gr=()=>{const e=Tn().getExtension(Bt);return Object(T.invariant)(e,"Uploady - tus was not registered. Make sure you used the enhancer"),()=>Ft(e.getOptions())},hr=pr;var br=e=>{const t=(t,n)=>{const{showFileUpload:r}=Tn(),{id:o,className:s,text:a,children:u,extraProps:i,onClick:d,...c}=t,l=Object(hn.useRef)();l.current=c;const f=Object(hn.useCallback)(e=>{r(l.current),null==d||d(e)},[r,l,d]);return bn.a.createElement(e,gn()({ref:n,onClick:f,id:o,className:s,children:u||a||"Upload"},i))};return _n(t),Object(hn.forwardRef)(t)};var mr=br(Object(hn.forwardRef)((e,t)=>bn.a.createElement("button",gn()({ref:t},e)))),Sr=mr,Er=n("ALC1");const vr=Object(hn.forwardRef)((e,t)=>{const n=Object(hn.useRef)(null);Object(hn.useImperativeHandle)(t,()=>n.current,[]);const{upload:r}=Tn(),{className:o,id:s,children:a,onDragOverClassName:u,dropHandler:i,htmlDirContentParams:d,extraProps:c,...l}=e,f=Object(hn.useRef)();f.current=l;const p=Object(hn.useCallback)(()=>{n.current&&u&&n.current.classList.remove(u)},[u,n]),g=Object(hn.useCallback)(e=>i?Promise.resolve(i(e)):Object(Er.getFilesFromDragEvent)(e,d||{}),[i,d]),h=Object(hn.useCallback)(e=>{g(e).then(e=>{r(e,f.current)})},[r,g,f]),b=Object(hn.useCallback)(e=>{e.preventDefault(),n.current&&u&&n.current.classList.add(u)},[u,n]),m=Object(hn.useCallback)(e=>{e.preventDefault(),e.persist(),p(),h(e)},[p,h]),S=Object(hn.useCallback)(()=>{p()},[p]),E=Object(hn.useCallback)(e=>{e.preventDefault(),e.stopPropagation(),p()},[p]);return bn.a.createElement("div",gn()({id:s,className:o,ref:n,onDragOver:b,onDrop:m,onDragLeave:S,onDragEnd:E},c),a)});_n(vr);var Or=vr,Tr=Or;var yr=(e,t)=>{const{upload:n}=Tn(),r=Object(hn.useRef)();return r.current=e,Object(hn.useCallback)(e=>{var o;const s=null===(o=e.clipboardData)||void 0===o?void 0:o.files;null!=s&&s.length&&(n(s,r.current),null==t||t({count:s.length}))},[n,r,t])};var Ir=e=>Object(hn.forwardRef)((t,n)=>{const{id:r,className:o,children:s,onPasteUpload:a,extraProps:u,...i}=t,d=yr(i,a),c=Rn(e)?{...i,extraProps:{...u,onPaste:d}}:{...u,onPaste:d};return bn.a.createElement(e,gn()({ref:n,id:r,className:o},c),s)});const Ar=(e,t)=>{((null==e?void 0:e.current)||window).addEventListener("paste",t)},Lr=(e,t)=>{((null==e?void 0:e.current)||window).removeEventListener("paste",t)};var _r=(e,t,n)=>{const r=Object(hn.useRef)(!0),o=yr(e,n),s=Object(hn.useCallback)(()=>(r.current=!r.current,r.current?Ar(t,o):Lr(t,o),r.current),[t,o]),a=Object(hn.useCallback)(()=>r.current,[]);return Object(hn.useEffect)(()=>(r.current&&Ar(t,o),()=>{r.current&&Lr(t,o)}),[t,o]),{toggle:s,getIsEnabled:a}},Rr=Ir;const Cr={IMAGE:"image",VIDEO:"video"};var Pr=n("R8cT"),Dr=n.n(Pr);const wr=Object(T.devFreeze)({rememberPreviousBatches:!1,loadFirstOnly:!1,maxPreviewImageSize:2e7,maxPreviewVideoSize:1e8,fallbackUrl:"",imageMimeTypes:["image/jpeg","image/webp","image/gif","image/png","image/apng","image/bmp","image/x-icon","image/svg+xml"],videoMimeTypes:["video/mp4","video/webm","video/ogg"],previewComponentProps:void 0}),Ur=(e,t)=>{let n=Object(T.isFunction)(e)?e(t):e;return"string"==typeof n&&(n={id:"",url:n,name:t.name,type:Cr.IMAGE}),n},kr=(e,t,n,r)=>{let o;return t&&~t.indexOf(r.type)&&(!n||r.size<=n)&&(o={url:Dr.a.createObjectURL(r),name:r.name,type:e}),o},jr=(e,t,n)=>{let r,o,s=!1;if(e.file){const n=e.file;r=((e,t)=>{let n=kr(Cr.IMAGE,t.imageMimeTypes,t.maxPreviewImageSize||0,e);return n||(n=kr(Cr.VIDEO,t.videoMimeTypes,t.maxPreviewVideoSize||0,e)),n})(e.file,t),r||(r=Ur(t.fallbackUrl,n),s=!0)}else r={url:e.url,name:e.url,type:Cr.IMAGE};if(r){const{url:t,type:s}=r;o=Object(T.isFunction)(n)?n(e,t,s):n}return r&&{...r,id:e.id,isFallback:s,props:o}};var Nr=e=>{const[t,n]=Object(hn.useState)([]),r=(o=e,{...wr,...o});var o;const s=Object(hn.useCallback)(()=>{n([])},[]);return Pn(o=>{const s=(r.loadFirstOnly?o.items.slice(0,1):o.items).map(t=>jr(t,r,e.previewComponentProps)).filter(Boolean);n(e.rememberPreviousBatches?((e,t)=>{const n=[];return t.forEach(t=>{const r=e.findIndex(e=>e.id===t.id);~r?e.splice(r,1,t):n.push(t)}),e.concat(n)})(t,s):s)}),{previews:t,clearPreviews:s}};var Fr=e=>{const{PreviewComponent:t,previewMethodsRef:n,onPreviewsChanged:r,...o}=e,{previews:s,clearPreviews:a}=Nr(o),u=Object(hn.useCallback)(t=>{const n=t.target,r=Ur(e.fallbackUrl,n.src);r&&(n.src=r.url)},[e.fallbackUrl]);return((e,t,n,r)=>{Object(hn.useImperativeHandle)(n,()=>({clear:t}),[t]),Object(hn.useEffect)(()=>{r&&r(e)},[e,r])})(s,a,n,r),s.map(e=>{const{id:n,url:r,type:o,name:s,isFallback:a,props:i}=e;return t?bn.a.createElement(t,gn()({key:n+r,id:n,url:r,type:o,name:s,isFallback:a},i)):((e,t,n,r)=>e===Cr.VIDEO?bn.a.createElement("video",gn()({key:t,src:t,controls:!0},n)):bn.a.createElement("img",gn()({key:t,onError:r,src:t},n)))(o,r,i,u)})},Br=Fr;const xr=Object(hn.forwardRef)((e,t)=>{const n=Object(hn.useRef)(null),r=Tn(),{className:o,id:s,placeholder:a,uploadRef:u,validate:i,ignoreKeyPress:d,...c}=e,l=Object(hn.useRef)();l.current=c,Object(hn.useImperativeHandle)(t,()=>n.current,[]);const f=Object(hn.useCallback)(()=>{const e=n.current,t=null==e?void 0:e.value;(i?i(t,e):t)&&r.upload(t,l.current)},[r,i,l,n]),p=Object(hn.useCallback)(e=>{d||"Enter"!==e.key||f()},[f,d]);return Object(hn.useImperativeHandle)(u,()=>f,[f]),bn.a.createElement("input",{type:"text",id:s,ref:n,className:o,onKeyPress:p,placeholder:a})});_n(xr);var Hr=xr,Mr=xr},cDcd:function(t,n){t.exports=e},faye:function(e,n){e.exports=t},"mHo/":function(e,t,n){"use strict";n.r(t),n.d(t,"BATCH_STATES",(function(){return i})),n.d(t,"FILE_STATES",(function(){return d})),n.d(t,"invariant",(function(){return s.a})),n.d(t,"throttle",(function(){return u.a})),n.d(t,"logger",(function(){return r})),n.d(t,"triggerCancellable",(function(){return h})),n.d(t,"triggerUpdater",(function(){return m})),n.d(t,"createBatchItem",(function(){return v})),n.d(t,"request",(function(){return T})),n.d(t,"parseResponseHeaders",(function(){return O})),n.d(t,"isFunction",(function(){return I.a})),n.d(t,"isPlainObject",(function(){return C})),n.d(t,"isSamePropInArrays",(function(){return A})),n.d(t,"devFreeze",(function(){return R})),n.d(t,"merge",(function(){return w})),n.d(t,"getMerge",(function(){return D})),n.d(t,"clone",(function(){return U})),n.d(t,"pick",(function(){return k})),n.d(t,"hasWindow",(function(){return c})),n.d(t,"isProduction",(function(){return _.a}));var r={};n.r(r),n.d(r,"isDebugOn",(function(){return f})),n.d(r,"setDebug",(function(){return p})),n.d(r,"debugLog",(function(){return g}));var o=n("kvau"),s=n.n(o),a=n("uDTZ"),u=n.n(a);const i={PENDING:"pending",ADDED:"added",PROCESSING:"processing",UPLOADING:"uploading",CANCELLED:"cancelled",FINISHED:"finished",ABORTED:"aborted"},d={PENDING:"pending",ADDED:"added",UPLOADING:"uploading",CANCELLED:"cancelled",FINISHED:"finished",ERROR:"error",ABORTED:"aborted"};var c=()=>"object"==typeof window&&!!window.document;let l;const f=()=>("boolean"!=typeof l&&(l=c()&&("location"in window&&!!~window.location.search.indexOf("rpldy_debug=true")||!0===window["__rpldy-logger-debug__"])),!!l),p=e=>{c()&&(window["__rpldy-logger-debug__"]=e),l=!!e||null},g=(...e)=>{f()&&console.log(...e)};var h=(e,t,...n)=>{const r=(t,...n)=>new Promise((r,o)=>{const s=e(t,...n);s&&s.length?Promise.all(s).catch(o).then(e=>e&&r(!!~e.findIndex(e=>!1===e))):r(!1)});return t?r(t,...n):r};const b=e=>null==e;var m=(e,t,...n)=>{const r=(t,...n)=>new Promise((r,o)=>{const s=e(t,...n);s&&s.length?Promise.all(s).catch(o).then(e=>{let t;if(e)for(;b(t)&&e.length;)t=e.pop();r(b(t)?void 0:t)}):r()});return t?r(t,...n):r};const S=Symbol.for("__rpldy-bi__");let E=0;var v=(e,t,n=!1)=>{E+=e.id&&e.batchId?0:1;let r={id:e.id&&e.batchId?e.id:`${t}.item-${E}`,batchId:t,state:n?d.PENDING:d.ADDED,uploadStatus:0,completed:0,loaded:0,aborted:!1,recycled:!1,previousBatch:null};if(Object.defineProperty(r,S,{value:!0,writable:!0}),"object"==typeof e&&!0===e[S]&&(r.recycled=!0,r.previousBatch=e.batchId,e=e.file||e.url),"string"==typeof e)r=((e,t)=>(e.url=t,e))(r,e);else{if(!(e=>e&&(e instanceof Blob||e instanceof File||"object"==typeof e&&e.name&&e.type))(e))throw new Error("Unknown type of file added: "+typeof e);r=((e,t)=>(e.file=t,e))(r,e)}return r};var O=e=>{let t;try{t=e.getAllResponseHeaders().trim().split(/[\r\n]+/).reduce((e,t)=>{const[n,r]=t.split(": ");return e[n]=r,e},{})}catch(t){g("uploady.request: failed to read response headers",e)}return t},T=(e,t,n={})=>{const r=new XMLHttpRequest,o=new Promise((o,s)=>{r.onerror=()=>s(r),r.ontimeout=()=>s(r),r.onabort=()=>s(r),r.onload=()=>o(r),r.open(n.method||"GET",e),((e,t)=>{t&&Object.keys(t).forEach(n=>{void 0!==t[n]&&e.setRequestHeader(n,t[n])})})(r,n.headers),r.withCredentials=!!n.withCredentials,n.preSend&&n.preSend(r),r.send(t)});return o.xhr=r,o},y=n("r5yn"),I=n.n(y);var A=(e,t,n)=>{let r=!0;const o=(e=>{const t=[].concat(e);return e=>e.map(e=>t.map(t=>e[t]).join())})(n);if(e&&t&&e.length===t.length){const n=o(e),s=o(t);r=!!n.find((e,t)=>e!==s[t])}return!r},L=n("DVTP"),_=n.n(L);var R=e=>_()()?e:Object.freeze(e),C=e=>{var t;return!!e&&"object"==typeof e&&("Object"===(null===(t=Object.getPrototypeOf(e))||void 0===t?void 0:t.constructor.name)||null===Object.getPrototypeOf(e))};const P=e=>C(e)||Array.isArray(e),D=(e={})=>{const t=(n,...r)=>(n&&r.length&&r.forEach(r=>{r&&((e,t)=>{const n=Object.keys(e);return t.withSymbols?n.concat(Object.getOwnPropertySymbols(e)):n})(r,e).forEach(o=>{const s=r[o];e.predicate&&!e.predicate(o,s)||(void 0!==s||e.undefinedOverwrites)&&(P(s)?(void 0!==n[o]&&C(n[o])||(n[o]=Array.isArray(s)?[]:{}),t(n[o],s)):n[o]=s)})}),n);return t};var w=D(),U=(e,t=w)=>P(e)?t(Array.isArray(e)?[]:{},e):e,k=(e,t)=>e&&Object.keys(e).reduce((n,r)=>(~t.indexOf(r)&&(n[r]=e[r]),n),{})},r5yn:function(e,t){e.exports=function(e){return"function"==typeof e}}})}));
//# sourceMappingURL=rpldy-all.umd.min.js.map